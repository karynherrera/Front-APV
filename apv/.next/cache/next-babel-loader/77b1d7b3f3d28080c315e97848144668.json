{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/juanc/source/repos/Front-APV/apv/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/juanc/source/repos/Front-APV/apv/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juanc\\\\source\\\\repos\\\\Front-APV\\\\apv\\\\components\\\\WizardComponent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport joven from \"../public/assets/svg/joven.svg\";\nimport joven2 from \"../public/assets/svg/joven2.svg\";\nexport var sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}; // Wizard is a single Formik instance whose children are each page of the\n// multi-step form. The form is submitted on each forward transition (can only\n// progress with valid input), whereas a backwards step is allowed with\n// incomplete data. A snapshot of form state is used as initialValues after each\n// transition. Each page has an optional submit handler, and the top-level\n// submit is called when the final page is submitted.\n\nexport var Wizard = function Wizard(_ref) {\n  _s();\n\n  var children = _ref.children,\n      initialValues = _ref.initialValues,\n      onSubmit = _ref.onSubmit;\n\n  var _useState = useState(0),\n      stepNumber = _useState[0],\n      setStepNumber = _useState[1];\n\n  var steps = React.Children.toArray(children);\n\n  var _useState2 = useState(initialValues),\n      snapshot = _useState2[0],\n      setSnapshot = _useState2[1];\n\n  var step = steps[stepNumber];\n  var totalSteps = steps.length;\n  var isLastStep = stepNumber === totalSteps - 1;\n\n  var next = function next(values) {\n    setSnapshot(values);\n    setStepNumber(Math.min(stepNumber + 1, totalSteps - 1));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, bag) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!step.props.onSubmit) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return step.props.onSubmit(values, bag);\n\n            case 3:\n              if (!isLastStep) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", onSubmit(values, bag));\n\n            case 7:\n              bag.setTouched({});\n              next(values);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12 col-md-10 bloque form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card formulario\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: snapshot,\n            onSubmit: handleSubmit,\n            validationSchema: step.props.validationSchema,\n            children: function children(formik) {\n              return /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Step \", stepNumber + 1, \" of \", totalSteps]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, _this), step, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col justify-content-center d-flex\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      id: \"calcular\",\n                      className: \"btn btn-lg btn-block\",\n                      disabled: !(formik.isValid && formik.dirty),\n                      children: stepNumber > 0 ? stepNumber > 1 ? 'Calcular' : 'Continuar' : 'Comenzar'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 45\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-2 \",\n      children: stepNumber > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: joven2,\n        alt: \"joven modelo 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 35\n      }, _this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: joven,\n        alt: \"joven modelo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 78\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Wizard, \"jPaS7Ddzox12UZBaSxRM3PitsqU=\");\n\n_c = Wizard;\nexport var WizardStep = function WizardStep(_ref3) {\n  var children = _ref3.children;\n  return children;\n};\n_c2 = WizardStep;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wizard\");\n$RefreshReg$(_c2, \"WizardStep\");","map":{"version":3,"sources":["C:/Users/juanc/source/repos/Front-APV/apv/components/WizardComponent.js"],"names":["React","useState","Form","Formik","joven","joven2","sleep","ms","Promise","resolve","setTimeout","Wizard","children","initialValues","onSubmit","stepNumber","setStepNumber","steps","Children","toArray","snapshot","setSnapshot","step","totalSteps","length","isLastStep","next","values","Math","min","handleSubmit","bag","props","setTouched","validationSchema","formik","isValid","dirty","WizardStep"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Form, Formik} from \"formik\";\r\nimport joven from \"../public/assets/svg/joven.svg\";\r\nimport joven2 from \"../public/assets/svg/joven2.svg\"\r\n\r\nexport const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// Wizard is a single Formik instance whose children are each page of the\r\n// multi-step form. The form is submitted on each forward transition (can only\r\n// progress with valid input), whereas a backwards step is allowed with\r\n// incomplete data. A snapshot of form state is used as initialValues after each\r\n// transition. Each page has an optional submit handler, and the top-level\r\n// submit is called when the final page is submitted.\r\nexport const Wizard = ({ children, initialValues, onSubmit }) => {\r\n\r\n\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const steps = React.Children.toArray(children);\r\n    const [snapshot, setSnapshot] = useState(initialValues);\r\n\r\n    const step = steps[stepNumber];\r\n    const totalSteps = steps.length;\r\n    const isLastStep = stepNumber === totalSteps - 1;\r\n\r\n    const next = values => {\r\n        setSnapshot(values);\r\n        setStepNumber(Math.min(stepNumber + 1, totalSteps - 1));\r\n    };\r\n\r\n\r\n    const handleSubmit = async (values, bag) => {\r\n        if (step.props.onSubmit) {\r\n            await step.props.onSubmit(values, bag);\r\n        }\r\n        if (isLastStep) {\r\n            return onSubmit(values, bag);\r\n        } else {\r\n            bag.setTouched({});\r\n            next(values);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-10 bloque form\">\r\n                <div className=\"card formulario\">\r\n                    <div className=\"card-body\">\r\n                        <Formik\r\n                            initialValues={snapshot}\r\n                            onSubmit={handleSubmit}\r\n                            validationSchema={step.props.validationSchema}\r\n                        >\r\n                            {(formik) => (\r\n                                <Form\r\n                                >\r\n                                    <p>\r\n                                        Step {stepNumber + 1} of {totalSteps}\r\n                                    </p>\r\n                                    {step}\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <div className=\"col justify-content-center d-flex\">\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                id=\"calcular\"\r\n                                                className=\"btn btn-lg btn-block\"\r\n                                                disabled={!(formik.isValid && formik.dirty)}\r\n                                            >\r\n                                                {stepNumber >0 ? (stepNumber > 1 ? 'Calcular': 'Continuar') : 'Comenzar'}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-2 \">\r\n                {stepNumber > 0 ? <img src={joven2} alt=\"joven modelo 2\"/> : <img src={joven} alt=\"joven modelo\"/>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const WizardStep = ({ children }) => children;\r\n"]},"metadata":{},"sourceType":"module"}