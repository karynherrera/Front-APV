{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanc\\\\source\\\\repos\\\\Front-APV\\\\apv\\\\components\\\\ApvForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport TerminosModal from \"./TerminosModal\";\nimport React, { useState } from \"react\";\nimport { Formik, useFormik, Form, Field, ErrorMessage, FormikValues, formikbag, useFormikContext } from \"formik\";\nimport * as Yup from 'yup';\nimport { rutValidador } from \"../utils/validationRut\";\n\nconst APVForm = () => {\n  const {\n    0: currentStep,\n    1: setCurrentStep\n  } = useState(0);\n  const {\n    0: lastStep,\n    1: setLastStep\n  } = useState(2);\n  const aacento = \"\\u00e1\";\n  const eacento = \"\\u00e9\";\n  const iacento = \"\\u00ed\";\n  const oacento = \"\\u00f3\";\n  const uacento = \"\\u00fa\";\n  const initialValues = {\n    nombre: '',\n    rut: '',\n    correo: '',\n    celular: '',\n    sueldo: '',\n    ahorro: '',\n    terminosycondiciones: false\n  };\n\n  const onSubmit = (values, formikbag) => {\n    console.log('Form values', values);\n    setTimeout(() => {\n      formikbag.setSubmitting(false);\n    }, 1000);\n  };\n\n  const validationSchema = Yup.object({\n    nombre: Yup.string().matches(/^[A-Za-z \\u00F1\\u00D1\\u00E1\\u00E9\\u00ED\\u00F3\\u00FA\\u00FC]{3,60}$/, `Ingresa tu nombre sin n${uacento}meros ni caracteres.`).required('Ingresa al menos un nombre y apellido.'),\n    rut: Yup.string().required(`Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`).test('Rut-validacion', `Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`, function (value) {\n      return rutValidador(formik.values.rut);\n    }),\n    correo: Yup.string().email(`Tu correo debe incluir un \"@\" y un dominio v${aacento}lido.`).required('Por favor ingrese su correo.'),\n    celular: Yup.string().matches(/^[9]{1}[0-9]{8}$/, `Ingresa un n${uacento}mero de 9 d${iacento}gitos.`).required(`Por favor ingrese su n${uacento}mero de tel${eacento}fono.`),\n    sueldo: Yup.string().matches(/^[0-9]{6,8}$/, `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`).test('Sueldo-validacion', `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`, function (value) {\n      let amount = formik.values.sueldo;\n      return amount >= 100000 && amount <= 10000000;\n    }).required('Por favor ingrese su sueldo líquido.'),\n    ahorro: Yup.string().matches(/^[0-9]+$/, `Ingrese el monto en pesos que desea ahorrar desde $1.000.`).test('Sueldo-validacion', `Ingrese un monto desde $1.000.`, function (value) {\n      let amount = formik.values.sueldo;\n      return amount >= 1000;\n    }).required('Por favor ingrese el monto que desea ahorrar desde $1.000.'),\n    terminosycondiciones: Yup.boolean().oneOf([true], `Debe aceptar las condiciones del servicio y la pol${iacento}tica de privacidad.`)\n  });\n  const {\n    0: modalShow,\n    1: setModalShow\n  } = useState(false);\n\n  const handleClose = () => setModalShow(false);\n\n  const handleShow = () => setModalShow(true);\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Formik Multistep Wizard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Wizard, {\n          initialValues: initialValues,\n          onSubmit: async (values) => sleep(300).then(() => console.log('Wizard submit', values)),\n          children: [/*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: () => console.log('Step1 onSubmit'),\n            validationSchema: Yup.object({\n              sueldo: Yup.string().matches(/^[0-9]{6,8}$/, `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`).test('Sueldo-validacion', `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`, function (value) {\n                return value >= 100000 && value <= 10000000;\n              }).required('Por favor ingrese su sueldo líquido.'),\n              ahorro: Yup.string().matches(/^[0-9]+$/, `Ingrese el monto en pesos que desea ahorrar desde $1.000.`).test('Sueldo-validacion', `Ingrese un monto desde $1.000.`, function (value) {\n                return value >= 1000;\n              }).required('Por favor ingrese el monto que desea ahorrar desde $1.000.')\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sueldo\",\n                className: \"control-label\",\n                children: \"sueldo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"sueldo\",\n                children: ({\n                  field,\n                  meta\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n                    type: \"text\"\n                  }, field), {}, {\n                    className: `form-control form-control-lg \n                                            ${meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"sueldo\",\n                    name: \"sueldo\",\n                    \"aria-describedby\": \"sueldoAyuda\",\n                    placeholder: \"Sueldo L\\xEDquido\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"sueldoAyuda\",\n                    className: `form-text \n                        ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`,\n                    children: meta.touched && meta.error ? meta.error : \"El sueldo líquido que recibes luego de los descuentos legales.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"ahorro\",\n                className: \"control-label\",\n                children: \"Monto Ahorro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"ahorro\",\n                children: ({\n                  field,\n                  meta\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"text\",\n                    className: `form-control form-control-lg ${meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"ahorro\",\n                    \"aria-describedby\": \"ahorroAyuda\",\n                    placeholder: \"Ahorro Mensual\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"ahorroAyuda\",\n                    className: `form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`,\n                    children: meta.touched && meta.error ? meta.error : \"El monto en pesos que invertirías en tu APV.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: () => console.log('Step1 onSubmit'),\n            validationSchema: Yup.object({\n              firstName: Yup.string().required('required'),\n              lastName: Yup.string().required('required')\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                autoComplete: \"given-name\",\n                component: \"input\",\n                id: \"firstName\",\n                name: \"firstName\",\n                placeholder: \"First Name\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                className: \"error\",\n                component: \"div\",\n                name: \"firstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                autoComplete: \"family-name\",\n                component: \"input\",\n                id: \"lastName\",\n                name: \"lastName\",\n                placeholder: \"Last Name\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                className: \"error\",\n                component: \"div\",\n                name: \"lastName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: () => console.log('Step2 onSubmit'),\n            validationSchema: Yup.object({\n              email: Yup.string().email('Invalid email address').required('required')\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                autoComplete: \"email\",\n                component: \"input\",\n                id: \"email\",\n                name: \"email\",\n                placeholder: \"Email\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                className: \"error\",\n                component: \"div\",\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ingresa tus datos y lo calcularemos para ti:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: `\n                            form-control \n                            form-control-lg \n                            ${formik.touched.sueldo ? formik.errors.sueldo ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n          id: \"sueldo\",\n          name: \"sueldo\",\n          \"aria-describedby\": \"sueldoAyuda\",\n          placeholder: \"Sueldo L\\xEDquido\"\n        }, formik.getFieldProps('sueldo')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sueldo\",\n          className: \"control-label\",\n          children: \"Sueldo Liquido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"sueldoAyuda\",\n          className: `form-text \n                        ${formik.touched.sueldo && formik.errors.sueldo ? \"is-invalid\" : \"\"}`,\n          children: formik.touched.sueldo && formik.errors.sueldo ? formik.errors.sueldo : \"El sueldo líquido que recibes luego de los descuentos legales.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: `form-control form-control-lg ${formik.touched.ahorro ? formik.errors.ahorro ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n          id: \"ahorro\",\n          name: \"ahorro\",\n          \"aria-describedby\": \"ahorroAyuda\",\n          placeholder: \"Ahorro Mensual\"\n        }, formik.getFieldProps('ahorro')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ahorro\",\n          className: \"control-label\",\n          children: \"Monto Ahorro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"ahorroAyuda\",\n          className: `form-text ${formik.touched.ahorro && formik.errors.ahorro ? \"is-invalid\" : \"\"}`,\n          children: formik.touched.ahorro && formik.errors.ahorro ? formik.errors.ahorro : \"El monto en pesos que invertirías en tu APV.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: `form-control form-control-lg ${formik.touched.nombre ? formik.errors.nombre ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n          id: \"nombre\",\n          name: \"nombre\",\n          \"aria-describedby\": \"nombreAyuda\",\n          placeholder: \"Nombre\"\n        }, formik.getFieldProps('nombre')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          className: \"control-label\",\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"nombreAyuda\",\n          className: `form-text ${formik.touched.nombre && formik.errors.nombre ? \"is-invalid\" : \"\"}`,\n          children: formik.touched.nombre && formik.errors.nombre ? formik.errors.nombre : \"Indicanos tu nombre y apellido.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: `form-control form-control-lg ${formik.touched.rut ? formik.errors.rut ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n          id: \"rut\",\n          name: \"rut\",\n          \"aria-describedby\": \"rutAyuda\",\n          placeholder: \"RUT\"\n        }, formik.getFieldProps('rut')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rut\",\n          className: \"control-label\",\n          children: \"RUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"rutAyuda\",\n          className: `form-text ${formik.touched.rut && formik.errors.rut ? \"is-invalid\" : \"\"}`,\n          children: formik.touched.rut && formik.errors.rut ? formik.errors.rut : \"Ej. 12345678-9.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"email\",\n          className: `form-control form-control-lg ${formik.touched.correo ? formik.errors.correo ? 'is-invalid' : 'is-valid' : ''}`,\n          id: \"correo\",\n          name: \"correo\",\n          \"aria-describedby\": \"correoAyuda\",\n          placeholder: \"Correo\"\n        }, formik.getFieldProps('correo')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"correo\",\n          className: \"control-label\",\n          children: \"Correo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"correoAyuda\",\n          className: `form-text ${formik.touched.correo && formik.errors.correo ? \"is-invalid\" : \"\"}`,\n          children: formik.touched.correo && formik.errors.correo ? formik.errors.correo : \"Ej. aumentatusueldo@afpmodelo.cl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: `form-control form-control-lg ${formik.touched.celular ? formik.errors.celular ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n          id: \"celular\",\n          name: \"celular\",\n          \"aria-describedby\": \"celularAyuda\",\n          placeholder: \"Celular\"\n        }, formik.getFieldProps('celular')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"celular\",\n          className: \"control-label\",\n          children: \"Celular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"celularAyuda\",\n          className: `form-text ${formik.touched.celular && formik.errors.celular ? \"is-invalid\" : \"\"}`,\n          children: formik.touched.celular && formik.errors.celular ? formik.errors.celular : \"Ej. 9111223XX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label mt-auto\",\n          htmlFor: \"terminosycondiciones\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n            type: \"checkbox\",\n            name: \"terminosycondiciones\",\n            className: \"form-check-input\"\n          }, formik.getFieldProps('terminosycondiciones')), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"terminosycondiciones\",\n            children: [\"Acepto las\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: handleShow,\n              children: [\"condiciones del servicio y la pol\", iacento, \"tica de privacidad.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"terminosAyuda\",\n          className: `form-text \n                            ${formik.touched.terminosycondiciones && formik.errors.terminosycondiciones ? 'is-invalid' : ''}`,\n          children: formik.touched.terminosycondiciones && formik.errors.terminosycondiciones ? formik.errors.terminosycondiciones : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col justify-content-center d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"calcular\",\n            className: \"btn btn-lg btn-block\",\n            disabled: !(formik.isValid && formik.dirty),\n            children: \"Calcular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TerminosModal, {\n            show: modalShow,\n            onHide: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms)); // Wizard is a single Formik instance whose children are each page of the\n// multi-step form. The form is submitted on each forward transition (can only\n// progress with valid input), whereas a backwards step is allowed with\n// incomplete data. A snapshot of form state is used as initialValues after each\n// transition. Each page has an optional submit handler, and the top-level\n// submit is called when the final page is submitted.\n\n\nconst Wizard = ({\n  children,\n  initialValues,\n  onSubmit\n}) => {\n  const {\n    0: stepNumber,\n    1: setStepNumber\n  } = useState(0);\n  const steps = React.Children.toArray(children);\n  const {\n    0: snapshot,\n    1: setSnapshot\n  } = useState(initialValues);\n  const step = steps[stepNumber];\n  const totalSteps = steps.length;\n  const isLastStep = stepNumber === totalSteps - 1;\n\n  const next = values => {\n    setSnapshot(values);\n    setStepNumber(Math.min(stepNumber + 1, totalSteps - 1));\n  };\n\n  const previous = values => {\n    setSnapshot(values);\n    setStepNumber(Math.max(stepNumber - 1, 0));\n  };\n\n  const handleSubmit = async (values, bag) => {\n    if (step.props.onSubmit) {\n      await step.props.onSubmit(values, bag);\n    }\n\n    if (isLastStep) {\n      return onSubmit(values, bag);\n    } else {\n      bag.setTouched({});\n      next(values);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: snapshot,\n    onSubmit: handleSubmit,\n    validationSchema: step.props.validationSchema,\n    children: formik => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Step \", stepNumber + 1, \" of \", totalSteps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 21\n      }, this), step, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [stepNumber > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => previous(formik.values),\n          type: \"button\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: formik.isSubmitting,\n            type: \"submit\",\n            children: isLastStep ? 'Submit' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 510,\n    columnNumber: 9\n  }, this);\n};\n\nconst WizardStep = ({\n  children\n}) => children;\n\nexport default APVForm;","map":{"version":3,"sources":["C:/Users/juanc/source/repos/Front-APV/apv/components/ApvForm.js"],"names":["TerminosModal","React","useState","Formik","useFormik","Form","Field","ErrorMessage","FormikValues","formikbag","useFormikContext","Yup","rutValidador","APVForm","currentStep","setCurrentStep","lastStep","setLastStep","aacento","eacento","iacento","oacento","uacento","initialValues","nombre","rut","correo","celular","sueldo","ahorro","terminosycondiciones","onSubmit","values","console","log","setTimeout","setSubmitting","validationSchema","object","string","matches","required","test","value","formik","email","amount","boolean","oneOf","modalShow","setModalShow","handleClose","handleShow","sleep","then","field","meta","touched","error","firstName","lastName","errors","getFieldProps","isValid","dirty","ms","Promise","resolve","Wizard","children","stepNumber","setStepNumber","steps","Children","toArray","snapshot","setSnapshot","step","totalSteps","length","isLastStep","next","Math","min","previous","max","handleSubmit","bag","props","setTouched","display","isSubmitting","WizardStep"],"mappings":"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","sourcesContent":["import TerminosModal from \"./TerminosModal\";\r\nimport React, {useState} from \"react\";\r\nimport {Formik, useFormik, Form, Field, ErrorMessage, FormikValues, formikbag, useFormikContext} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport {rutValidador} from \"../utils/validationRut\";\r\n\r\nconst APVForm = () => {\r\n\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [lastStep, setLastStep] = useState(2);\r\n\r\n    const aacento = \"\\u00e1\";\r\n    const eacento = \"\\u00e9\";\r\n    const iacento = \"\\u00ed\";\r\n    const oacento = \"\\u00f3\";\r\n    const uacento = \"\\u00fa\";\r\n\r\n\r\n    const initialValues = {\r\n        nombre: '',\r\n        rut: '',\r\n        correo: '',\r\n        celular: '',\r\n        sueldo: '',\r\n        ahorro: '',\r\n        terminosycondiciones: false\r\n    };\r\n\r\n    const onSubmit = (values, formikbag) => {\r\n        console.log('Form values', values);\r\n        setTimeout(() => {\r\n            formikbag.setSubmitting(false)\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    const validationSchema = Yup.object({\r\n        nombre: Yup\r\n            .string()\r\n            .matches(\r\n                /^[A-Za-z \\u00F1\\u00D1\\u00E1\\u00E9\\u00ED\\u00F3\\u00FA\\u00FC]{3,60}$/,\r\n                `Ingresa tu nombre sin n${uacento}meros ni caracteres.`)\r\n            .required('Ingresa al menos un nombre y apellido.'),\r\n        rut: Yup\r\n            .string()\r\n            .required(`Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`)\r\n            .test('Rut-validacion',\r\n                `Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`,\r\n                function (value) {\r\n                    return rutValidador(formik.values.rut);\r\n                }),\r\n        correo: Yup\r\n            .string()\r\n            .email(`Tu correo debe incluir un \"@\" y un dominio v${aacento}lido.`)\r\n            .required('Por favor ingrese su correo.'),\r\n        celular: Yup\r\n            .string()\r\n            .matches(/^[9]{1}[0-9]{8}$/, `Ingresa un n${uacento}mero de 9 d${iacento}gitos.`)\r\n            .required(`Por favor ingrese su n${uacento}mero de tel${eacento}fono.`),\r\n        sueldo: Yup\r\n            .string()\r\n            .matches(/^[0-9]{6,8}$/, `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`)\r\n            .test('Sueldo-validacion', `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`, function (value) {\r\n               let amount = formik.values.sueldo;\r\n                return (amount >= 100000 && amount <= 10000000)\r\n            })\r\n            .required('Por favor ingrese su sueldo líquido.'),\r\n        ahorro: Yup\r\n            .string()\r\n            .matches(/^[0-9]+$/, `Ingrese el monto en pesos que desea ahorrar desde $1.000.`)\r\n            .test('Sueldo-validacion', `Ingrese un monto desde $1.000.`, function (value) {\r\n                let amount = formik.values.sueldo;\r\n                return (amount >= 1000 )\r\n            })\r\n            .required('Por favor ingrese el monto que desea ahorrar desde $1.000.'),\r\n        terminosycondiciones: Yup\r\n            .boolean()\r\n            .oneOf([true], `Debe aceptar las condiciones del servicio y la pol${iacento}tica de privacidad.`)\r\n\r\n    });\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <div>\r\n                    <h1>Formik Multistep Wizard</h1>\r\n                    <Wizard\r\n                        initialValues={initialValues}\r\n                        onSubmit={async values =>\r\n                            sleep(300).then(() => console.log('Wizard submit', values))\r\n                        }\r\n                    >\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step1 onSubmit')}\r\n                            validationSchema={Yup.object({\r\n                                sueldo: Yup\r\n                                    .string()\r\n                                    .matches(/^[0-9]{6,8}$/, `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`)\r\n                                    .test('Sueldo-validacion', `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`, function (value) {\r\n                                        return (value>= 100000 && value <= 10000000)\r\n                                    })\r\n                                    .required('Por favor ingrese su sueldo líquido.'),\r\n                                ahorro: Yup\r\n                                    .string()\r\n                                    .matches(/^[0-9]+$/, `Ingrese el monto en pesos que desea ahorrar desde $1.000.`)\r\n                                    .test('Sueldo-validacion', `Ingrese un monto desde $1.000.`, function (value) {\r\n                                        return (value >= 1000 )\r\n                                    })\r\n                                    .required('Por favor ingrese el monto que desea ahorrar desde $1.000.'),\r\n                            })}\r\n                        >\r\n                            <div>\r\n                                <label\r\n                                    htmlFor=\"sueldo\"\r\n                                    className={\"control-label\"}>sueldo</label>\r\n                                <Field name=\"sueldo\"\r\n                                >\r\n                                    {({\r\n                                          field,\r\n                                          meta}) => (\r\n                                              <>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            {...field}\r\n                                            className={\r\n                                                `form-control form-control-lg \r\n                                            ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                            id=\"sueldo\"\r\n                                            name=\"sueldo\"\r\n                                            aria-describedby=\"sueldoAyuda\"\r\n                                            placeholder=\"Sueldo Líquido\"\r\n                                        />\r\n                                                  <small\r\n                                                      id=\"sueldoAyuda\"\r\n                                                      className={`form-text \r\n                        ${meta.touched && meta.error ? \"is-invalid\" : \"\" }`}\r\n                                                  >\r\n                                                      {meta.touched && meta.error\r\n                                                          ? meta.error\r\n                                                          : \"El sueldo líquido que recibes luego de los descuentos legales.\"}\r\n                                                  </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div>\r\n                                <label\r\n                                    htmlFor=\"ahorro\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Monto Ahorro\r\n                                </label>\r\n                                <Field name=\"ahorro\">\r\n                                    {({\r\n                                          field,\r\n                                          meta,\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"text\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                                id=\"ahorro\"\r\n                                                aria-describedby=\"ahorroAyuda\"\r\n                                                placeholder=\"Ahorro Mensual\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"ahorroAyuda\"\r\n                                                className={`form-text ${\r\n                                                    meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                            >\r\n                                                {meta.touched && meta.error\r\n                                                    ? meta.error\r\n                                                    : \"El monto en pesos que invertirías en tu APV.\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </WizardStep>\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step1 onSubmit')}\r\n                            validationSchema={Yup.object({\r\n                                firstName: Yup.string().required('required'),\r\n                                lastName: Yup.string().required('required'),\r\n                            })}\r\n                        >\r\n                            <div>\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <Field\r\n                                    autoComplete=\"given-name\"\r\n                                    component=\"input\"\r\n                                    id=\"firstName\"\r\n                                    name=\"firstName\"\r\n                                    placeholder=\"First Name\"\r\n                                    type=\"text\"\r\n                                />\r\n                                <ErrorMessage className=\"error\" component=\"div\" name=\"firstName\" />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <Field\r\n                                    autoComplete=\"family-name\"\r\n                                    component=\"input\"\r\n                                    id=\"lastName\"\r\n                                    name=\"lastName\"\r\n                                    placeholder=\"Last Name\"\r\n                                    type=\"text\"\r\n                                />\r\n                                <ErrorMessage className=\"error\" component=\"div\" name=\"lastName\" />\r\n                            </div>\r\n                        </WizardStep>\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step2 onSubmit')}\r\n                            validationSchema={Yup.object({\r\n                                email: Yup.string()\r\n                                    .email('Invalid email address')\r\n                                    .required('required'),\r\n                            })}\r\n                        >\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <Field\r\n                                    autoComplete=\"email\"\r\n                                    component=\"input\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    type=\"text\"\r\n                                />\r\n                                <ErrorMessage className=\"error\" component=\"div\" name=\"email\" />\r\n                            </div>\r\n                        </WizardStep>\r\n                    </Wizard>\r\n                </div>\r\n            </section>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <p>Ingresa tus datos y lo calcularemos para ti:</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`\r\n                            form-control \r\n                            form-control-lg \r\n                            ${formik.touched.sueldo ? (formik.errors.sueldo ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                        id=\"sueldo\"\r\n                        name=\"sueldo\"\r\n                        aria-describedby=\"sueldoAyuda\"\r\n                        placeholder=\"Sueldo Líquido\"\r\n                        {...formik.getFieldProps('sueldo')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"sueldo\"\r\n                        className={\"control-label\"}\r\n                    >\r\n                        Sueldo Liquido\r\n                    </label>\r\n                    <small\r\n                        id=\"sueldoAyuda\"\r\n                        className={`form-text \r\n                        ${formik.touched.sueldo && formik.errors.sueldo ? \"is-invalid\" : \"\" }`}\r\n                    >\r\n                        {formik.touched.sueldo && formik.errors.sueldo\r\n                            ? formik.errors.sueldo\r\n                            : \"El sueldo líquido que recibes luego de los descuentos legales.\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.ahorro ? (formik.errors.ahorro ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                        id=\"ahorro\"\r\n                        name=\"ahorro\"\r\n                        aria-describedby=\"ahorroAyuda\"\r\n                        placeholder=\"Ahorro Mensual\"\r\n                        {...formik.getFieldProps('ahorro')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"ahorro\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        Monto Ahorro\r\n                    </label>\r\n                    <small\r\n                        id=\"ahorroAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.ahorro && formik.errors.ahorro ? \"is-invalid\" : \"\"}`}\r\n                    >\r\n                        {formik.touched.ahorro && formik.errors.ahorro\r\n                            ? formik.errors.ahorro\r\n                            : \"El monto en pesos que invertirías en tu APV.\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.nombre ? (formik.errors.nombre ? \"is-invalid\" : \"is-valid\" ) : \"\"}`}\r\n                        id=\"nombre\"\r\n                        name=\"nombre\"\r\n                        aria-describedby=\"nombreAyuda\"\r\n                        placeholder=\"Nombre\"\r\n                        {...formik.getFieldProps('nombre')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"nombre\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        Nombre\r\n                    </label>\r\n                    <small\r\n                        id=\"nombreAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.nombre && formik.errors.nombre ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                    >\r\n                        {formik.touched.nombre && formik.errors.nombre\r\n                            ? formik.errors.nombre\r\n                            : \"Indicanos tu nombre y apellido.\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.rut ? (formik.errors.rut ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                        id=\"rut\"\r\n                        name=\"rut\"\r\n                        aria-describedby=\"rutAyuda\"\r\n                        placeholder=\"RUT\"\r\n                        {...formik.getFieldProps('rut')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"rut\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        RUT\r\n                    </label>\r\n                    <small\r\n                        id=\"rutAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.rut && formik.errors.rut ? \"is-invalid\" : \"\"}`}\r\n                    >\r\n                        {formik.touched.rut && formik.errors.rut\r\n                            ? formik.errors.rut\r\n                            : \"Ej. 12345678-9.\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"email\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.correo ? (formik.errors.correo ? 'is-invalid' : 'is-valid') : ''\r\n                        }`}\r\n                        id=\"correo\"\r\n                        name=\"correo\"\r\n                        aria-describedby=\"correoAyuda\"\r\n                        placeholder=\"Correo\"\r\n                        {...formik.getFieldProps('correo')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"correo\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        Correo\r\n                    </label>\r\n                    <small\r\n                        id=\"correoAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.correo && formik.errors.correo ? \"is-invalid\" : \"\"}`}\r\n                    >\r\n                        {formik.touched.correo && formik.errors.correo\r\n                            ? formik.errors.correo\r\n                            : \"Ej. aumentatusueldo@afpmodelo.cl\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.celular ? (formik.errors.celular ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                        id=\"celular\"\r\n                        name=\"celular\"\r\n                        aria-describedby=\"celularAyuda\"\r\n                        placeholder=\"Celular\"\r\n                        {...formik.getFieldProps('celular')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"celular\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        Celular\r\n                    </label>\r\n                    <small\r\n                        id=\"celularAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.celular && formik.errors.celular ? \"is-invalid\" : \"\"}`}\r\n                    >\r\n                        {formik.touched.celular && formik.errors.celular ? formik.errors.celular : \"Ej. 9111223XX\"}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-check\">\r\n                    <label\r\n                        className=\"form-check-label mt-auto\"\r\n                        htmlFor=\"terminosycondiciones\"\r\n                    >\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"terminosycondiciones\"\r\n                            className=\"form-check-input\"\r\n                            {...formik.getFieldProps('terminosycondiciones')}\r\n                        />\r\n                        <small className=\"terminosycondiciones\">\r\n                            Acepto las{\" \"}\r\n                            <a\r\n                                onClick={handleShow}\r\n                            >\r\n                                condiciones del servicio y la pol{iacento}\r\n                                tica de privacidad.\r\n                            </a>\r\n                        </small>\r\n                    </label>\r\n                    <small\r\n                        id=\"terminosAyuda\"\r\n                        className={\r\n                            `form-text \r\n                            ${ formik.touched.terminosycondiciones && formik.errors.terminosycondiciones\r\n                                ? 'is-invalid': ''}`}\r\n                    >\r\n                        {formik.touched.terminosycondiciones && formik.errors.terminosycondiciones\r\n                            ? formik.errors.terminosycondiciones\r\n                            : \"\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"col justify-content-center d-flex\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            id=\"calcular\"\r\n                            className=\"btn btn-lg btn-block\"\r\n                            disabled={!(formik.isValid && formik.dirty)}\r\n                        >\r\n                            Calcular\r\n                        </button>\r\n                        <TerminosModal\r\n                            show={modalShow}\r\n                            onHide={handleClose}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// Wizard is a single Formik instance whose children are each page of the\r\n// multi-step form. The form is submitted on each forward transition (can only\r\n// progress with valid input), whereas a backwards step is allowed with\r\n// incomplete data. A snapshot of form state is used as initialValues after each\r\n// transition. Each page has an optional submit handler, and the top-level\r\n// submit is called when the final page is submitted.\r\nconst Wizard = ({ children, initialValues, onSubmit }) => {\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const steps = React.Children.toArray(children);\r\n    const [snapshot, setSnapshot] = useState(initialValues);\r\n\r\n    const step = steps[stepNumber];\r\n    const totalSteps = steps.length;\r\n    const isLastStep = stepNumber === totalSteps - 1;\r\n\r\n    const next = values => {\r\n        setSnapshot(values);\r\n        setStepNumber(Math.min(stepNumber + 1, totalSteps - 1));\r\n    };\r\n\r\n    const previous = values => {\r\n        setSnapshot(values);\r\n        setStepNumber(Math.max(stepNumber - 1, 0));\r\n    };\r\n\r\n    const handleSubmit = async (values, bag) => {\r\n        if (step.props.onSubmit) {\r\n            await step.props.onSubmit(values, bag);\r\n        }\r\n        if (isLastStep) {\r\n            return onSubmit(values, bag);\r\n        } else {\r\n            bag.setTouched({});\r\n            next(values);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={snapshot}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={step.props.validationSchema}\r\n        >\r\n            {(formik) => (\r\n                <Form>\r\n                    <p>\r\n                        Step {stepNumber + 1} of {totalSteps}\r\n                    </p>\r\n                    {step}\r\n                    <div style={{ display: 'flex' }}>\r\n                        {stepNumber > 0 && (\r\n                            <button onClick={() => previous(formik.values)} type=\"button\">\r\n                                Back\r\n                            </button>\r\n                        )}\r\n                        <div>\r\n                            <button disabled={formik.isSubmitting} type=\"submit\">\r\n                                {isLastStep ? 'Submit' : 'Next'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nconst WizardStep = ({ children }) => children;\r\n\r\n\r\nexport default APVForm;"]},"metadata":{},"sourceType":"module"}