{"ast":null,"code":"import _defineProperty from \"C:/Users/juanc/source/repos/Front-APV/apv/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/juanc/source/repos/Front-APV/apv/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/juanc/source/repos/Front-APV/apv/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juanc\\\\source\\\\repos\\\\Front-APV\\\\apv\\\\components\\\\ApvForm.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport TerminosModal from \"./TerminosModal\";\nimport React, { useState } from \"react\";\nimport { Formik, useFormik, Form, Field, ErrorMessage, FormikValues, formikbag, useFormikContext } from \"formik\";\nimport * as Yup from 'yup';\nimport { rutValidador } from \"../utils/validationRut\";\n\nvar APVForm = function APVForm() {\n  _s();\n\n  var _useState = useState(0),\n      currentStep = _useState[0],\n      setCurrentStep = _useState[1];\n\n  var _useState2 = useState(2),\n      lastStep = _useState2[0],\n      setLastStep = _useState2[1];\n\n  var aacento = \"\\xE1\";\n  var eacento = \"\\xE9\";\n  var iacento = \"\\xED\";\n  var oacento = \"\\xF3\";\n  var uacento = \"\\xFA\";\n  var initialValues = {\n    nombre: '',\n    rut: '',\n    correo: '',\n    celular: '',\n    sueldo: '',\n    ahorro: '',\n    terminosycondiciones: false\n  };\n\n  var onSubmit = function onSubmit(values, formikbag) {\n    console.log('Form values', values);\n    setTimeout(function () {\n      formikbag.setSubmitting(false);\n    }, 1000);\n  };\n\n  var validationSchema = Yup.object({\n    nombre: Yup.string().matches(/^[A-Za-z \\u00F1\\u00D1\\u00E1\\u00E9\\u00ED\\u00F3\\u00FA\\u00FC]{3,60}$/, \"Ingresa tu nombre sin n\".concat(uacento, \"meros ni caracteres.\")).required('Ingresa al menos un nombre y apellido.'),\n    rut: Yup.string().required(\"Por favor ingrese un RUT v\".concat(aacento, \"lido sin puntos y con gui\").concat(oacento, \"n.\")).test('Rut-validacion', \"Por favor ingrese un RUT v\".concat(aacento, \"lido sin puntos y con gui\").concat(oacento, \"n.\"), function (value) {\n      return rutValidador(formik.values.rut);\n    }),\n    correo: Yup.string().email(\"Tu correo debe incluir un \\\"@\\\" y un dominio v\".concat(aacento, \"lido.\")).required('Por favor ingrese su correo.'),\n    celular: Yup.string().matches(/^[9]{1}[0-9]{8}$/, \"Ingresa un n\".concat(uacento, \"mero de 9 d\").concat(iacento, \"gitos.\")).required(\"Por favor ingrese su n\".concat(uacento, \"mero de tel\").concat(eacento, \"fono.\")),\n    sueldo: Yup.string().matches(/^[0-9]{6,8}$/, \"Ingrese un sueldo l\".concat(iacento, \"quido entre $100.000 y $10.000.000.\")).test('Sueldo-validacion', \"Ingrese un sueldo l\".concat(iacento, \"quido entre $100.000 y $10.000.000.\"), function (value) {\n      var amount = formik.values.sueldo;\n      return amount >= 100000 && amount <= 10000000;\n    }).required('Por favor ingrese su sueldo líquido.'),\n    ahorro: Yup.string().matches(/^[0-9]+$/, \"Ingrese el monto en pesos que desea ahorrar desde $1.000.\").test('Sueldo-validacion', \"Ingrese un monto desde $1.000.\", function (value) {\n      var amount = formik.values.sueldo;\n      return amount >= 1000;\n    }).required('Por favor ingrese el monto que desea ahorrar desde $1.000.'),\n    terminosycondiciones: Yup[\"boolean\"]().oneOf([true], \"Debe aceptar las condiciones del servicio y la pol\".concat(iacento, \"tica de privacidad.\"))\n  });\n\n  var _useState3 = useState(false),\n      modalShow = _useState3[0],\n      setModalShow = _useState3[1];\n\n  var handleClose = function handleClose() {\n    return setModalShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setModalShow(true);\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Formik Multistep Wizard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Wizard, {\n          initialValues: initialValues,\n          onSubmit: /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      return _context.abrupt(\"return\", sleep(300).then(function () {\n                        return console.log('Wizard submit', values);\n                      }));\n\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }(),\n          children: [/*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: function onSubmit() {\n              return console.log('Step1 onSubmit');\n            },\n            validationSchema: Yup.object({\n              sueldo: Yup.string().matches(/^[0-9]{6,8}$/, \"Ingrese un sueldo l\".concat(iacento, \"quido entre $100.000 y $10.000.000.\")).test('Sueldo-validacion', \"Ingrese un sueldo l\".concat(iacento, \"quido entre $100.000 y $10.000.000.\"), function (value) {\n                return value >= 100000 && value <= 10000000;\n              }).required('Por favor ingrese su sueldo líquido.'),\n              ahorro: Yup.string().matches(/^[0-9]+$/, \"Ingrese el monto en pesos que desea ahorrar desde $1.000.\").test('Sueldo-validacion', \"Ingrese un monto desde $1.000.\", function (value) {\n                return value >= 1000;\n              }).required('Por favor ingrese el monto que desea ahorrar desde $1.000.')\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sueldo\",\n                className: \"control-label\",\n                children: \"sueldo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                component: \"input\",\n                id: \"sueldo\",\n                name: \"sueldo\",\n                \"aria-describedby\": \"sueldoAyuda\",\n                placeholder: \"Sueldo L\\xEDquido\",\n                type: \"text\",\n                className: \"form-control form-control-lg \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                className: \"form-text is-invalid\",\n                component: \"div\",\n                name: \"sueldo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                autoComplete: \"family-name\",\n                component: \"input\",\n                id: \"lastName\",\n                name: \"lastName\",\n                placeholder: \"Last Name\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                className: \"error\",\n                component: \"div\",\n                name: \"lastName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: function onSubmit() {\n              return console.log('Step1 onSubmit');\n            },\n            validationSchema: Yup.object({\n              firstName: Yup.string().required('required'),\n              lastName: Yup.string().required('required')\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                autoComplete: \"given-name\",\n                component: \"input\",\n                id: \"firstName\",\n                name: \"firstName\",\n                placeholder: \"First Name\",\n                type: \"text\",\n                form: (touched, errors)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                className: \"error\",\n                component: \"div\",\n                name: \"firstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                autoComplete: \"family-name\",\n                component: \"input\",\n                id: \"lastName\",\n                name: \"lastName\",\n                placeholder: \"Last Name\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                className: \"error\",\n                component: \"div\",\n                name: \"lastName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: function onSubmit() {\n              return console.log('Step2 onSubmit');\n            },\n            validationSchema: Yup.object({\n              email: Yup.string().email('Invalid email address').required('required')\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                autoComplete: \"email\",\n                component: \"input\",\n                id: \"email\",\n                name: \"email\",\n                placeholder: \"Email\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                className: \"error\",\n                component: \"div\",\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ingresa tus datos y lo calcularemos para ti:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: \"\\n                            form-control \\n                            form-control-lg \\n                            \".concat(formik.touched.sueldo ? formik.errors.sueldo ? \"is-invalid\" : \"is-valid\" : \"\"),\n          id: \"sueldo\",\n          name: \"sueldo\",\n          \"aria-describedby\": \"sueldoAyuda\",\n          placeholder: \"Sueldo L\\xEDquido\"\n        }, formik.getFieldProps('sueldo')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sueldo\",\n          className: \"control-label\",\n          children: \"Sueldo Liquido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"sueldoAyuda\",\n          className: \"form-text \\n                        \".concat(formik.touched.sueldo && formik.errors.sueldo ? \"is-invalid\" : \"\"),\n          children: formik.touched.sueldo && formik.errors.sueldo ? formik.errors.sueldo : \"El sueldo líquido que recibes luego de los descuentos legales.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: \"form-control form-control-lg \".concat(formik.touched.ahorro ? formik.errors.ahorro ? \"is-invalid\" : \"is-valid\" : \"\"),\n          id: \"ahorro\",\n          name: \"ahorro\",\n          \"aria-describedby\": \"ahorroAyuda\",\n          placeholder: \"Ahorro Mensual\"\n        }, formik.getFieldProps('ahorro')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ahorro\",\n          className: \"control-label\",\n          children: \"Monto Ahorro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"ahorroAyuda\",\n          className: \"form-text \".concat(formik.touched.ahorro && formik.errors.ahorro ? \"is-invalid\" : \"\"),\n          children: formik.touched.ahorro && formik.errors.ahorro ? formik.errors.ahorro : \"El monto en pesos que invertirías en tu APV.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: \"form-control form-control-lg \".concat(formik.touched.nombre ? formik.errors.nombre ? \"is-invalid\" : \"is-valid\" : \"\"),\n          id: \"nombre\",\n          name: \"nombre\",\n          \"aria-describedby\": \"nombreAyuda\",\n          placeholder: \"Nombre\"\n        }, formik.getFieldProps('nombre')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          className: \"control-label\",\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"nombreAyuda\",\n          className: \"form-text \".concat(formik.touched.nombre && formik.errors.nombre ? \"is-invalid\" : \"\"),\n          children: formik.touched.nombre && formik.errors.nombre ? formik.errors.nombre : \"Indicanos tu nombre y apellido.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: \"form-control form-control-lg \".concat(formik.touched.rut ? formik.errors.rut ? \"is-invalid\" : \"is-valid\" : \"\"),\n          id: \"rut\",\n          name: \"rut\",\n          \"aria-describedby\": \"rutAyuda\",\n          placeholder: \"RUT\"\n        }, formik.getFieldProps('rut')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rut\",\n          className: \"control-label\",\n          children: \"RUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"rutAyuda\",\n          className: \"form-text \".concat(formik.touched.rut && formik.errors.rut ? \"is-invalid\" : \"\"),\n          children: formik.touched.rut && formik.errors.rut ? formik.errors.rut : \"Ej. 12345678-9.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"email\",\n          className: \"form-control form-control-lg \".concat(formik.touched.correo ? formik.errors.correo ? 'is-invalid' : 'is-valid' : ''),\n          id: \"correo\",\n          name: \"correo\",\n          \"aria-describedby\": \"correoAyuda\",\n          placeholder: \"Correo\"\n        }, formik.getFieldProps('correo')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"correo\",\n          className: \"control-label\",\n          children: \"Correo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"correoAyuda\",\n          className: \"form-text \".concat(formik.touched.correo && formik.errors.correo ? \"is-invalid\" : \"\"),\n          children: formik.touched.correo && formik.errors.correo ? formik.errors.correo : \"Ej. aumentatusueldo@afpmodelo.cl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"text\",\n          className: \"form-control form-control-lg \".concat(formik.touched.celular ? formik.errors.celular ? \"is-invalid\" : \"is-valid\" : \"\"),\n          id: \"celular\",\n          name: \"celular\",\n          \"aria-describedby\": \"celularAyuda\",\n          placeholder: \"Celular\"\n        }, formik.getFieldProps('celular')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"celular\",\n          className: \"control-label\",\n          children: \"Celular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"celularAyuda\",\n          className: \"form-text \".concat(formik.touched.celular && formik.errors.celular ? \"is-invalid\" : \"\"),\n          children: formik.touched.celular && formik.errors.celular ? formik.errors.celular : \"Ej. 9111223XX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label mt-auto\",\n          htmlFor: \"terminosycondiciones\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n            type: \"checkbox\",\n            name: \"terminosycondiciones\",\n            className: \"form-check-input\"\n          }, formik.getFieldProps('terminosycondiciones')), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"terminosycondiciones\",\n            children: [\"Acepto las\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: handleShow,\n              children: [\"condiciones del servicio y la pol\", iacento, \"tica de privacidad.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"terminosAyuda\",\n          className: \"form-text \\n                            \".concat(formik.touched.terminosycondiciones && formik.errors.terminosycondiciones ? 'is-invalid' : ''),\n          children: formik.touched.terminosycondiciones && formik.errors.terminosycondiciones ? formik.errors.terminosycondiciones : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col justify-content-center d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"calcular\",\n            className: \"btn btn-lg btn-block\",\n            disabled: !(formik.isValid && formik.dirty),\n            children: \"Calcular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TerminosModal, {\n            show: modalShow,\n            onHide: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(APVForm, \"UngzLi8g5iioq4g/2ysBP3xx97E=\", false, function () {\n  return [useFormik];\n});\n\n_c = APVForm;\n\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}; // Wizard is a single Formik instance whose children are each page of the\n// multi-step form. The form is submitted on each forward transition (can only\n// progress with valid input), whereas a backwards step is allowed with\n// incomplete data. A snapshot of form state is used as initialValues after each\n// transition. Each page has an optional submit handler, and the top-level\n// submit is called when the final page is submitted.\n\n\nvar Wizard = function Wizard(_ref2) {\n  _s2();\n\n  var children = _ref2.children,\n      initialValues = _ref2.initialValues,\n      onSubmit = _ref2.onSubmit;\n\n  var _useState4 = useState(0),\n      stepNumber = _useState4[0],\n      setStepNumber = _useState4[1];\n\n  var steps = React.Children.toArray(children);\n\n  var _useState5 = useState(initialValues),\n      snapshot = _useState5[0],\n      setSnapshot = _useState5[1];\n\n  var step = steps[stepNumber];\n  var totalSteps = steps.length;\n  var isLastStep = stepNumber === totalSteps - 1;\n\n  var next = function next(values) {\n    setSnapshot(values);\n    setStepNumber(Math.min(stepNumber + 1, totalSteps - 1));\n  };\n\n  var previous = function previous(values) {\n    setSnapshot(values);\n    setStepNumber(Math.max(stepNumber - 1, 0));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, bag) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!step.props.onSubmit) {\n                _context2.next = 3;\n                break;\n              }\n\n              _context2.next = 3;\n              return step.props.onSubmit(values, bag);\n\n            case 3:\n              if (!isLastStep) {\n                _context2.next = 7;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", onSubmit(values, bag));\n\n            case 7:\n              bag.setTouched({});\n              next(values);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: snapshot,\n    onSubmit: handleSubmit,\n    validationSchema: step.props.validationSchema,\n    children: function children(formik) {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Step \", stepNumber + 1, \" of \", totalSteps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 21\n        }, _this), step, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [stepNumber > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              return previous(formik.values);\n            },\n            type: \"button\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: formik.isSubmitting,\n              type: \"submit\",\n              children: isLastStep ? 'Submit' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 469,\n    columnNumber: 9\n  }, _this);\n};\n\n_s2(Wizard, \"jPaS7Ddzox12UZBaSxRM3PitsqU=\");\n\n_c2 = Wizard;\n\nvar WizardStep = function WizardStep(_ref4) {\n  var children = _ref4.children;\n  return children;\n};\n\n_c3 = WizardStep;\nexport default APVForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"APVForm\");\n$RefreshReg$(_c2, \"Wizard\");\n$RefreshReg$(_c3, \"WizardStep\");","map":{"version":3,"sources":["C:/Users/juanc/source/repos/Front-APV/apv/components/ApvForm.js"],"names":["TerminosModal","React","useState","Formik","useFormik","Form","Field","ErrorMessage","FormikValues","formikbag","useFormikContext","Yup","rutValidador","APVForm","currentStep","setCurrentStep","lastStep","setLastStep","aacento","eacento","iacento","oacento","uacento","initialValues","nombre","rut","correo","celular","sueldo","ahorro","terminosycondiciones","onSubmit","values","console","log","setTimeout","setSubmitting","validationSchema","object","string","matches","required","test","value","formik","email","amount","oneOf","modalShow","setModalShow","handleClose","handleShow","sleep","then","firstName","lastName","touched","errors","getFieldProps","isValid","dirty","ms","Promise","resolve","Wizard","children","stepNumber","setStepNumber","steps","Children","toArray","snapshot","setSnapshot","step","totalSteps","length","isLastStep","next","Math","min","previous","max","handleSubmit","bag","props","setTouched","display","isSubmitting","WizardStep"],"mappings":"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","sourcesContent":["import TerminosModal from \"./TerminosModal\";\r\nimport React, {useState} from \"react\";\r\nimport {Formik, useFormik, Form, Field, ErrorMessage, FormikValues, formikbag, useFormikContext} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport {rutValidador} from \"../utils/validationRut\";\r\n\r\nconst APVForm = () => {\r\n\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [lastStep, setLastStep] = useState(2);\r\n\r\n    const aacento = \"\\u00e1\";\r\n    const eacento = \"\\u00e9\";\r\n    const iacento = \"\\u00ed\";\r\n    const oacento = \"\\u00f3\";\r\n    const uacento = \"\\u00fa\";\r\n\r\n\r\n    const initialValues = {\r\n        nombre: '',\r\n        rut: '',\r\n        correo: '',\r\n        celular: '',\r\n        sueldo: '',\r\n        ahorro: '',\r\n        terminosycondiciones: false\r\n    };\r\n\r\n    const onSubmit = (values, formikbag) => {\r\n        console.log('Form values', values);\r\n        setTimeout(() => {\r\n            formikbag.setSubmitting(false)\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    const validationSchema = Yup.object({\r\n        nombre: Yup\r\n            .string()\r\n            .matches(\r\n                /^[A-Za-z \\u00F1\\u00D1\\u00E1\\u00E9\\u00ED\\u00F3\\u00FA\\u00FC]{3,60}$/,\r\n                `Ingresa tu nombre sin n${uacento}meros ni caracteres.`)\r\n            .required('Ingresa al menos un nombre y apellido.'),\r\n        rut: Yup\r\n            .string()\r\n            .required(`Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`)\r\n            .test('Rut-validacion',\r\n                `Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`,\r\n                function (value) {\r\n                    return rutValidador(formik.values.rut);\r\n                }),\r\n        correo: Yup\r\n            .string()\r\n            .email(`Tu correo debe incluir un \"@\" y un dominio v${aacento}lido.`)\r\n            .required('Por favor ingrese su correo.'),\r\n        celular: Yup\r\n            .string()\r\n            .matches(/^[9]{1}[0-9]{8}$/, `Ingresa un n${uacento}mero de 9 d${iacento}gitos.`)\r\n            .required(`Por favor ingrese su n${uacento}mero de tel${eacento}fono.`),\r\n        sueldo: Yup\r\n            .string()\r\n            .matches(/^[0-9]{6,8}$/, `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`)\r\n            .test('Sueldo-validacion', `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`, function (value) {\r\n               let amount = formik.values.sueldo;\r\n                return (amount >= 100000 && amount <= 10000000)\r\n            })\r\n            .required('Por favor ingrese su sueldo líquido.'),\r\n        ahorro: Yup\r\n            .string()\r\n            .matches(/^[0-9]+$/, `Ingrese el monto en pesos que desea ahorrar desde $1.000.`)\r\n            .test('Sueldo-validacion', `Ingrese un monto desde $1.000.`, function (value) {\r\n                let amount = formik.values.sueldo;\r\n                return (amount >= 1000 )\r\n            })\r\n            .required('Por favor ingrese el monto que desea ahorrar desde $1.000.'),\r\n        terminosycondiciones: Yup\r\n            .boolean()\r\n            .oneOf([true], `Debe aceptar las condiciones del servicio y la pol${iacento}tica de privacidad.`)\r\n\r\n    });\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <div>\r\n                    <h1>Formik Multistep Wizard</h1>\r\n                    <Wizard\r\n                        initialValues={initialValues}\r\n                        onSubmit={async values =>\r\n                            sleep(300).then(() => console.log('Wizard submit', values))\r\n                        }\r\n                    >\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step1 onSubmit')}\r\n                            validationSchema={Yup.object({\r\n                                sueldo: Yup\r\n                                    .string()\r\n                                    .matches(/^[0-9]{6,8}$/, `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`)\r\n                                    .test('Sueldo-validacion', `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`, function (value) {\r\n                                        return (value>= 100000 && value <= 10000000)\r\n                                    })\r\n                                    .required('Por favor ingrese su sueldo líquido.'),\r\n                                ahorro: Yup\r\n                                    .string()\r\n                                    .matches(/^[0-9]+$/, `Ingrese el monto en pesos que desea ahorrar desde $1.000.`)\r\n                                    .test('Sueldo-validacion', `Ingrese un monto desde $1.000.`, function (value) {\r\n                                        return (value >= 1000 )\r\n                                    })\r\n                                    .required('Por favor ingrese el monto que desea ahorrar desde $1.000.'),\r\n                            })}\r\n                        >\r\n                            <div>\r\n                                <label\r\n                                    htmlFor=\"sueldo\"\r\n                                    className={\"control-label\"}>sueldo</label>\r\n                                <Field\r\n                                    component=\"input\"\r\n                                    id=\"sueldo\"\r\n                                    name=\"sueldo\"\r\n                                    aria-describedby=\"sueldoAyuda\"\r\n                                    placeholder=\"Sueldo Líquido\"\r\n                                    type=\"text\"\r\n                                    className={`form-control form-control-lg `}\r\n                                />\r\n                                <ErrorMessage className=\"form-text is-invalid\" component=\"div\" name=\"sueldo\" />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <Field\r\n                                    autoComplete=\"family-name\"\r\n                                    component=\"input\"\r\n                                    id=\"lastName\"\r\n                                    name=\"lastName\"\r\n                                    placeholder=\"Last Name\"\r\n                                    type=\"text\"\r\n                                />\r\n                                <ErrorMessage className=\"error\" component=\"div\" name=\"lastName\" />\r\n                            </div>\r\n                        </WizardStep>\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step1 onSubmit')}\r\n                            validationSchema={Yup.object({\r\n                                firstName: Yup.string().required('required'),\r\n                                lastName: Yup.string().required('required'),\r\n                            })}\r\n                        >\r\n                            <div>\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <Field\r\n                                    autoComplete=\"given-name\"\r\n                                    component=\"input\"\r\n                                    id=\"firstName\"\r\n                                    name=\"firstName\"\r\n                                    placeholder=\"First Name\"\r\n                                    type=\"text\"\r\n                                    form={touched, errors}\r\n                                />\r\n                                <ErrorMessage className=\"error\" component=\"div\" name=\"firstName\" />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <Field\r\n                                    autoComplete=\"family-name\"\r\n                                    component=\"input\"\r\n                                    id=\"lastName\"\r\n                                    name=\"lastName\"\r\n                                    placeholder=\"Last Name\"\r\n                                    type=\"text\"\r\n                                />\r\n                                <ErrorMessage className=\"error\" component=\"div\" name=\"lastName\" />\r\n                            </div>\r\n                        </WizardStep>\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step2 onSubmit')}\r\n                            validationSchema={Yup.object({\r\n                                email: Yup.string()\r\n                                    .email('Invalid email address')\r\n                                    .required('required'),\r\n                            })}\r\n                        >\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <Field\r\n                                    autoComplete=\"email\"\r\n                                    component=\"input\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    type=\"text\"\r\n                                />\r\n                                <ErrorMessage className=\"error\" component=\"div\" name=\"email\" />\r\n                            </div>\r\n                        </WizardStep>\r\n                    </Wizard>\r\n                </div>\r\n            </section>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <p>Ingresa tus datos y lo calcularemos para ti:</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`\r\n                            form-control \r\n                            form-control-lg \r\n                            ${formik.touched.sueldo ? (formik.errors.sueldo ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                        id=\"sueldo\"\r\n                        name=\"sueldo\"\r\n                        aria-describedby=\"sueldoAyuda\"\r\n                        placeholder=\"Sueldo Líquido\"\r\n                        {...formik.getFieldProps('sueldo')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"sueldo\"\r\n                        className={\"control-label\"}\r\n                    >\r\n                        Sueldo Liquido\r\n                    </label>\r\n                    <small\r\n                        id=\"sueldoAyuda\"\r\n                        className={`form-text \r\n                        ${formik.touched.sueldo && formik.errors.sueldo ? \"is-invalid\" : \"\" }`}\r\n                    >\r\n                        {formik.touched.sueldo && formik.errors.sueldo\r\n                            ? formik.errors.sueldo\r\n                            : \"El sueldo líquido que recibes luego de los descuentos legales.\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.ahorro ? (formik.errors.ahorro ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                        id=\"ahorro\"\r\n                        name=\"ahorro\"\r\n                        aria-describedby=\"ahorroAyuda\"\r\n                        placeholder=\"Ahorro Mensual\"\r\n                        {...formik.getFieldProps('ahorro')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"ahorro\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        Monto Ahorro\r\n                    </label>\r\n                    <small\r\n                        id=\"ahorroAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.ahorro && formik.errors.ahorro ? \"is-invalid\" : \"\"}`}\r\n                    >\r\n                        {formik.touched.ahorro && formik.errors.ahorro\r\n                            ? formik.errors.ahorro\r\n                            : \"El monto en pesos que invertirías en tu APV.\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.nombre ? (formik.errors.nombre ? \"is-invalid\" : \"is-valid\" ) : \"\"}`}\r\n                        id=\"nombre\"\r\n                        name=\"nombre\"\r\n                        aria-describedby=\"nombreAyuda\"\r\n                        placeholder=\"Nombre\"\r\n                        {...formik.getFieldProps('nombre')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"nombre\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        Nombre\r\n                    </label>\r\n                    <small\r\n                        id=\"nombreAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.nombre && formik.errors.nombre ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                    >\r\n                        {formik.touched.nombre && formik.errors.nombre\r\n                            ? formik.errors.nombre\r\n                            : \"Indicanos tu nombre y apellido.\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.rut ? (formik.errors.rut ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                        id=\"rut\"\r\n                        name=\"rut\"\r\n                        aria-describedby=\"rutAyuda\"\r\n                        placeholder=\"RUT\"\r\n                        {...formik.getFieldProps('rut')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"rut\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        RUT\r\n                    </label>\r\n                    <small\r\n                        id=\"rutAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.rut && formik.errors.rut ? \"is-invalid\" : \"\"}`}\r\n                    >\r\n                        {formik.touched.rut && formik.errors.rut\r\n                            ? formik.errors.rut\r\n                            : \"Ej. 12345678-9.\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"email\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.correo ? (formik.errors.correo ? 'is-invalid' : 'is-valid') : ''\r\n                        }`}\r\n                        id=\"correo\"\r\n                        name=\"correo\"\r\n                        aria-describedby=\"correoAyuda\"\r\n                        placeholder=\"Correo\"\r\n                        {...formik.getFieldProps('correo')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"correo\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        Correo\r\n                    </label>\r\n                    <small\r\n                        id=\"correoAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.correo && formik.errors.correo ? \"is-invalid\" : \"\"}`}\r\n                    >\r\n                        {formik.touched.correo && formik.errors.correo\r\n                            ? formik.errors.correo\r\n                            : \"Ej. aumentatusueldo@afpmodelo.cl\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control form-control-lg ${\r\n                            formik.touched.celular ? (formik.errors.celular ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                        id=\"celular\"\r\n                        name=\"celular\"\r\n                        aria-describedby=\"celularAyuda\"\r\n                        placeholder=\"Celular\"\r\n                        {...formik.getFieldProps('celular')}\r\n                    />\r\n                    <label\r\n                        htmlFor=\"celular\"\r\n                        className=\"control-label\"\r\n                    >\r\n                        Celular\r\n                    </label>\r\n                    <small\r\n                        id=\"celularAyuda\"\r\n                        className={`form-text ${\r\n                            formik.touched.celular && formik.errors.celular ? \"is-invalid\" : \"\"}`}\r\n                    >\r\n                        {formik.touched.celular && formik.errors.celular ? formik.errors.celular : \"Ej. 9111223XX\"}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-check\">\r\n                    <label\r\n                        className=\"form-check-label mt-auto\"\r\n                        htmlFor=\"terminosycondiciones\"\r\n                    >\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"terminosycondiciones\"\r\n                            className=\"form-check-input\"\r\n                            {...formik.getFieldProps('terminosycondiciones')}\r\n                        />\r\n                        <small className=\"terminosycondiciones\">\r\n                            Acepto las{\" \"}\r\n                            <a\r\n                                onClick={handleShow}\r\n                            >\r\n                                condiciones del servicio y la pol{iacento}\r\n                                tica de privacidad.\r\n                            </a>\r\n                        </small>\r\n                    </label>\r\n                    <small\r\n                        id=\"terminosAyuda\"\r\n                        className={\r\n                            `form-text \r\n                            ${ formik.touched.terminosycondiciones && formik.errors.terminosycondiciones\r\n                                ? 'is-invalid': ''}`}\r\n                    >\r\n                        {formik.touched.terminosycondiciones && formik.errors.terminosycondiciones\r\n                            ? formik.errors.terminosycondiciones\r\n                            : \"\"}\r\n                    </small>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"col justify-content-center d-flex\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            id=\"calcular\"\r\n                            className=\"btn btn-lg btn-block\"\r\n                            disabled={!(formik.isValid && formik.dirty)}\r\n                        >\r\n                            Calcular\r\n                        </button>\r\n                        <TerminosModal\r\n                            show={modalShow}\r\n                            onHide={handleClose}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// Wizard is a single Formik instance whose children are each page of the\r\n// multi-step form. The form is submitted on each forward transition (can only\r\n// progress with valid input), whereas a backwards step is allowed with\r\n// incomplete data. A snapshot of form state is used as initialValues after each\r\n// transition. Each page has an optional submit handler, and the top-level\r\n// submit is called when the final page is submitted.\r\nconst Wizard = ({ children, initialValues, onSubmit }) => {\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const steps = React.Children.toArray(children);\r\n    const [snapshot, setSnapshot] = useState(initialValues);\r\n\r\n    const step = steps[stepNumber];\r\n    const totalSteps = steps.length;\r\n    const isLastStep = stepNumber === totalSteps - 1;\r\n\r\n    const next = values => {\r\n        setSnapshot(values);\r\n        setStepNumber(Math.min(stepNumber + 1, totalSteps - 1));\r\n    };\r\n\r\n    const previous = values => {\r\n        setSnapshot(values);\r\n        setStepNumber(Math.max(stepNumber - 1, 0));\r\n    };\r\n\r\n    const handleSubmit = async (values, bag) => {\r\n        if (step.props.onSubmit) {\r\n            await step.props.onSubmit(values, bag);\r\n        }\r\n        if (isLastStep) {\r\n            return onSubmit(values, bag);\r\n        } else {\r\n            bag.setTouched({});\r\n            next(values);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={snapshot}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={step.props.validationSchema}\r\n        >\r\n            {(formik) => (\r\n                <Form>\r\n                    <p>\r\n                        Step {stepNumber + 1} of {totalSteps}\r\n                    </p>\r\n                    {step}\r\n                    <div style={{ display: 'flex' }}>\r\n                        {stepNumber > 0 && (\r\n                            <button onClick={() => previous(formik.values)} type=\"button\">\r\n                                Back\r\n                            </button>\r\n                        )}\r\n                        <div>\r\n                            <button disabled={formik.isSubmitting} type=\"submit\">\r\n                                {isLastStep ? 'Submit' : 'Next'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nconst WizardStep = ({ children }) => children;\r\n\r\n\r\nexport default APVForm;"]},"metadata":{},"sourceType":"module"}