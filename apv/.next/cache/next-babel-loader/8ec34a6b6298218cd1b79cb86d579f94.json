{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanc\\\\source\\\\repos\\\\Front-APV\\\\apv\\\\components\\\\ApvForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport TerminosModal from \"./TerminosModal\";\nimport React, { useState, useEffect } from \"react\";\nimport { Field } from \"formik\";\nimport { Wizard, WizardStep, sleep } from \"./WizardComponent\";\nimport { Step1Schema, Step2Schema, Step3Schema } from \"../utils/validationSchemaWizard\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { GetServerSideProps } from 'next';\n\nconst APVForm = () => {\n  const aacento = \"\\u00e1\";\n  const eacento = \"\\u00e9\";\n  const iacento = \"\\u00ed\";\n  const oacento = \"\\u00f3\";\n  const uacento = \"\\u00fa\";\n  const router = useRouter();\n  const initialValues = {\n    nombre: '',\n    rut: '',\n    correo: '',\n    celular: '',\n    sueldo: '',\n    ahorro: '',\n    terminosycondiciones: false\n  };\n  const {\n    0: modalShow,\n    1: setModalShow\n  } = useState(false);\n\n  const handleClose = () => setModalShow(false);\n\n  const handleShow = () => setModalShow(true);\n\n  const {\n    0: bearer,\n    1: setBearer\n  } = useState('');\n  useEffect(() => {\n    async function loadBearer() {\n      const response = await axios.get('https://apvbackendmanager.azurewebsites.net/Token/GenerateToken');\n      const token = await response.data.key;\n      setBearer(token);\n    }\n\n    loadBearer();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Wizard, {\n          initialValues: initialValues,\n          onSubmit: values => {\n            const headers = {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${bearer}`\n            };\n            const url = 'https://apvbackendmanager.azurewebsites.net/ApvSimulacion/ingresarsimulacion';\n            const body = {\n              nombre: values.nombre,\n              rut: values.rut,\n              correo: values.correo,\n              celular: values.celular,\n              sueldo: values.sueldo,\n              ahorro: values.ahorro\n            };\n            axios.post(url, body, {\n              headers: headers\n            }).then(response => {\n              let data = response.data; //console.log(data)\n\n              if (data.idSimulacion) {\n                router.push({\n                  pathname: \"/resultado\",\n                  as: \"resultado\",\n                  query: {\n                    id: data.idSimulacion\n                  }\n                });\n              }\n            }).catch(e => {\n              console.log(e);\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: () => console.log('Step1 onSubmit'),\n            validationSchema: Step1Schema,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sueldo\",\n                className: \"control-label\",\n                children: \"sueldo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"sueldo\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n                    type: \"text\"\n                  }, field), {}, {\n                    className: `form-control form-control-lg \n                                            ${touched.sueldo ? errors.sueldo ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"sueldo\",\n                    \"aria-describedby\": \"sueldoAyuda\",\n                    placeholder: \"Sueldo L\\xEDquido\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"sueldoAyuda\",\n                    className: `form-text \n                                                    ${touched.sueldo && errors.sueldo ? \"is-invalid\" : \"\"}`,\n                    children: touched.sueldo && errors.sueldo ? errors.sueldo : \"El sueldo líquido que recibes luego de los descuentos legales.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"ahorro\",\n                className: \"control-label\",\n                children: \"Monto Ahorro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"ahorro\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"text\",\n                    className: `form-control form-control-lg ${touched.ahorro ? errors.ahorro ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"ahorro\",\n                    \"aria-describedby\": \"ahorroAyuda\",\n                    placeholder: \"Ahorro Mensual\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"ahorroAyuda\",\n                    className: `form-text ${touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"}`,\n                    children: touched.ahorro && errors.ahorro ? errors.ahorro : \"El monto en pesos que invertirías en tu APV.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: () => console.log('Step2 onSubmit'),\n            validationSchema: Step2Schema,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"nombre\",\n                className: \"control-label\",\n                children: \"Nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"nombre\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"text\",\n                    className: `form-control form-control-lg ${touched.nombre ? errors.nombre ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"nombre\",\n                    \"aria-describedby\": \"nombreAyuda\",\n                    placeholder: \"Nombre\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"nombreAyuda\",\n                    className: `form-text ${touched.nombre && errors.nombre ? \"is-invalid\" : \"\"}`,\n                    children: touched.nombre && errors.nombre ? errors.nombre : \"Indicanos tu nombre y apellido.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"rut\",\n                className: \"control-label\",\n                children: \"RUT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"rut\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"text\",\n                    className: `form-control form-control-lg ${touched.rut ? errors.rut ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"rut\",\n                    \"aria-describedby\": \"rutAyuda\",\n                    placeholder: \"RUT\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"rutAyuda\",\n                    className: `form-text ${touched.rut && errors.rut ? \"is-invalid\" : \"\"}`,\n                    children: touched.rut && errors.rut ? errors.rut : \"Ej. 12345678-9.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: () => console.log('Step3 onSubmit'),\n            validationSchema: Step3Schema,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"correo\",\n                className: \"control-label\",\n                children: \"Correo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"correo\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"email\",\n                    className: `form-control form-control-lg ${touched.correo ? errors.correo ? 'is-invalid' : 'is-valid' : ''}`,\n                    id: \"correo\",\n                    \"aria-describedby\": \"correoAyuda\",\n                    placeholder: \"Correo\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"correoAyuda\",\n                    className: `form-text ${touched.correo && errors.correo ? \"is-invalid\" : \"\"}`,\n                    children: touched.correo && errors.correo ? errors.correo : \"Ej. aumentatusueldo@afpmodelo.cl\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"celular\",\n                className: \"control-label\",\n                children: \"Celular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"celular\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"text\",\n                    className: `form-control form-control-lg ${touched.celular ? errors.celular ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"celular\",\n                    \"aria-describedby\": \"celularAyuda\",\n                    placeholder: \"Celular\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"celularAyuda\",\n                    className: `form-text ${touched.celular && errors.celular ? \"is-invalid\" : \"\"}`,\n                    children: touched.celular && errors.celular ? errors.celular : \"Ej. 9111223XX\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                name: \"terminosycondiciones\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label mt-auto\",\n                    htmlFor: \"terminosycondiciones\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                      type: \"checkbox\",\n                      className: \"form-check-input\"\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"terminosycondiciones\",\n                      children: [\"Acepto las\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                        onClick: handleShow,\n                        children: [\"condiciones del servicio y la pol\", iacento, \"tica de privacidad.\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"terminosAyuda\",\n                    className: `form-text \n                            ${touched.terminosycondiciones && errors.terminosycondiciones ? 'is-invalid' : ''}`,\n                    children: touched.terminosycondiciones && errors.terminosycondiciones ? errors.terminosycondiciones : \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TerminosModal, {\n                    show: modalShow,\n                    onHide: handleClose\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\nAPVForm.GetServerSideProps = async () => {\n  const response = await axios.get('https://apvbackendmanager.azurewebsites.net/Token/GenerateToken');\n  const token = await response.data.key;\n\n  if (!token) {\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false\n      }\n    };\n  }\n\n  return token;\n};\n\nexport default APVForm;","map":{"version":3,"sources":["C:/Users/juanc/source/repos/Front-APV/apv/components/ApvForm.js"],"names":["TerminosModal","React","useState","useEffect","Field","Wizard","WizardStep","sleep","Step1Schema","Step2Schema","Step3Schema","useRouter","axios","GetServerSideProps","APVForm","aacento","eacento","iacento","oacento","uacento","router","initialValues","nombre","rut","correo","celular","sueldo","ahorro","terminosycondiciones","modalShow","setModalShow","handleClose","handleShow","bearer","setBearer","loadBearer","response","get","token","data","key","values","headers","url","body","post","then","idSimulacion","push","pathname","as","query","id","catch","e","console","log","field","form","touched","errors","redirect","destination","permanent"],"mappings":"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","sourcesContent":["import TerminosModal from \"./TerminosModal\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {Field} from \"formik\";\r\nimport {Wizard, WizardStep, sleep} from \"./WizardComponent\";\r\nimport {Step1Schema, Step2Schema, Step3Schema} from \"../utils/validationSchemaWizard\";\r\nimport { useRouter } from'next/router';\r\nimport axios from 'axios';\r\nimport { GetServerSideProps } from 'next'\r\n\r\nconst APVForm = () => {\r\n\r\n    const aacento = \"\\u00e1\";\r\n    const eacento = \"\\u00e9\";\r\n    const iacento = \"\\u00ed\";\r\n    const oacento = \"\\u00f3\";\r\n    const uacento = \"\\u00fa\";\r\n\r\n    const router = useRouter();\r\n\r\n    const initialValues = {\r\n        nombre: '',\r\n        rut: '',\r\n        correo: '',\r\n        celular: '',\r\n        sueldo: '',\r\n        ahorro: '',\r\n        terminosycondiciones: false\r\n    };\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n    const [bearer,setBearer] = useState('');\r\n\r\n    useEffect(()=>{\r\n        async function loadBearer() {\r\n\r\n            const response = await axios.get('https://apvbackendmanager.azurewebsites.net/Token/GenerateToken');\r\n\r\n            const token = await response.data.key\r\n            setBearer(token);\r\n        }\r\n        loadBearer();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <div>\r\n                    <Wizard\r\n                        initialValues={initialValues}\r\n                        onSubmit={values => {\r\n\r\n                            const headers = {\r\n                                \"Content-Type\": \"application/json\",\r\n                                \"Authorization\": `Bearer ${bearer}`\r\n                            };\r\n\r\n                            const url = 'https://apvbackendmanager.azurewebsites.net/ApvSimulacion/ingresarsimulacion';\r\n\r\n                            const body = {\r\n                                nombre: values.nombre,\r\n                                rut: values.rut,\r\n                                correo: values.correo,\r\n                                celular: values.celular,\r\n                                sueldo: values.sueldo,\r\n                                ahorro: values.ahorro\r\n                            };\r\n\r\n                            axios\r\n                                .post(url, body, { headers: headers })\r\n                                .then((response) => {\r\n                                    let data = response.data;\r\n                                    //console.log(data)\r\n\r\n                                    if (data.idSimulacion) {\r\n                                        router.push({\r\n                                            pathname: \"/resultado\",\r\n                                            as: \"resultado\",\r\n                                            query: {\r\n                                                id: data.idSimulacion,\r\n                                            },\r\n                                        });\r\n                                    }\r\n                                })\r\n                                .catch(e => {\r\n                                    console.log(e);\r\n                                });\r\n                        }}\r\n                    >\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step1 onSubmit')}\r\n                            validationSchema={Step1Schema}\r\n                        >\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"sueldo\"\r\n                                    className={\"control-label\"}>sueldo\r\n                                </label>\r\n                                <Field name=\"sueldo\"\r\n                                >\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                          }) => (\r\n                                              <>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            {...field}\r\n                                            className={\r\n                                                `form-control form-control-lg \r\n                                            ${touched.sueldo ? (errors.sueldo ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                            id=\"sueldo\"\r\n                                            aria-describedby=\"sueldoAyuda\"\r\n                                            placeholder=\"Sueldo Líquido\"\r\n                                        />\r\n                                            <small\r\n                                                id=\"sueldoAyuda\"\r\n                                                className={`form-text \r\n                                                    ${touched.sueldo && errors.sueldo ? \"is-invalid\" : \"\" }`}\r\n                                            >\r\n                                                {touched.sueldo && errors.sueldo\r\n                                                    ? errors.sueldo\r\n                                                    : \"El sueldo líquido que recibes luego de los descuentos legales.\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"ahorro\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Monto Ahorro\r\n                                </label>\r\n                                <Field name=\"ahorro\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"text\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.ahorro ? (errors.ahorro ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                                id=\"ahorro\"\r\n                                                aria-describedby=\"ahorroAyuda\"\r\n                                                placeholder=\"Ahorro Mensual\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"ahorroAyuda\"\r\n                                                className={`form-text ${\r\n                                                    touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"}`}\r\n                                            >\r\n                                                {touched.ahorro && errors.ahorro\r\n                                                    ? errors.ahorro\r\n                                                    : \"El monto en pesos que invertirías en tu APV.\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </WizardStep>\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step2 onSubmit')}\r\n                            validationSchema={Step2Schema}\r\n                        >\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"nombre\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Nombre\r\n                                </label>\r\n                                <Field name=\"nombre\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"text\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.nombre ? (errors.nombre ? \"is-invalid\" : \"is-valid\" ) : \"\"}`}\r\n                                                id=\"nombre\"\r\n                                                aria-describedby=\"nombreAyuda\"\r\n                                                placeholder=\"Nombre\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"nombreAyuda\"\r\n                                                className={`form-text ${\r\n                                                    touched.nombre && errors.nombre ? \"is-invalid\" : \"\"\r\n                                                }`}\r\n                                            >\r\n                                                {touched.nombre && errors.nombre\r\n                                                    ? errors.nombre\r\n                                                    : \"Indicanos tu nombre y apellido.\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"rut\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    RUT\r\n                                </label>\r\n                                <Field name=\"rut\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"text\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.rut ? (errors.rut ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                                id=\"rut\"\r\n                                                aria-describedby=\"rutAyuda\"\r\n                                                placeholder=\"RUT\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"rutAyuda\"\r\n                                                className={`form-text ${\r\n                                                    touched.rut && errors.rut ? \"is-invalid\" : \"\"}`}\r\n                                            >\r\n                                                {touched.rut && errors.rut\r\n                                                    ? errors.rut\r\n                                                    : \"Ej. 12345678-9.\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </WizardStep>\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step3 onSubmit')}\r\n                            validationSchema={Step3Schema}\r\n                        >\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"correo\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Correo\r\n                                </label>\r\n                                <Field name=\"correo\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"email\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.correo ? (errors.correo ? 'is-invalid' : 'is-valid') : ''\r\n                                                }`}\r\n                                                id=\"correo\"\r\n                                                aria-describedby=\"correoAyuda\"\r\n                                                placeholder=\"Correo\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"correoAyuda\"\r\n                                                className={`form-text ${touched.correo && errors.correo ? \"is-invalid\" : \"\"}`}\r\n                                            >\r\n                                                {touched.correo && errors.correo\r\n                                                    ? errors.correo\r\n                                                    : \"Ej. aumentatusueldo@afpmodelo.cl\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"celular\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Celular\r\n                                </label>\r\n                                <Field name=\"celular\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"text\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.celular ? (errors.celular ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                                id=\"celular\"\r\n                                                aria-describedby=\"celularAyuda\"\r\n                                                placeholder=\"Celular\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"celularAyuda\"\r\n                                                className={`form-text ${\r\n                                                    touched.celular && errors.celular ? \"is-invalid\" : \"\"}`}\r\n                                            >\r\n                                                {touched.celular && errors.celular ? errors.celular : \"Ej. 9111223XX\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n\r\n                                <Field name=\"terminosycondiciones\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <label\r\n                                                className=\"form-check-label mt-auto\"\r\n                                                htmlFor=\"terminosycondiciones\"\r\n                                            >\r\n                                                <input\r\n                                                    {...field}\r\n                                                    type=\"checkbox\"\r\n                                                    className=\"form-check-input\"\r\n                                                />\r\n                                                <small className=\"terminosycondiciones\">\r\n                                                    Acepto las{\" \"}\r\n                                                    <a\r\n                                                        onClick={handleShow}\r\n                                                    >\r\n                                                        condiciones del servicio y la pol{iacento}\r\n                                                        tica de privacidad.\r\n                                                    </a>\r\n                                                </small>\r\n                                            </label>\r\n                                            <small\r\n                                                id=\"terminosAyuda\"\r\n                                                className={\r\n                                                    `form-text \r\n                            ${ touched.terminosycondiciones && errors.terminosycondiciones\r\n                                                        ? 'is-invalid': ''}`}\r\n                                            >\r\n                                                {touched.terminosycondiciones && errors.terminosycondiciones\r\n                                                    ? errors.terminosycondiciones\r\n                                                    : \"\"}\r\n                                            </small>\r\n                                            <TerminosModal\r\n                                                show={modalShow}\r\n                                                onHide={handleClose}\r\n                                            />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </WizardStep>\r\n                    </Wizard>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nAPVForm.GetServerSideProps = async () =>\r\n{\r\n    const response = await axios.get('https://apvbackendmanager.azurewebsites.net/Token/GenerateToken');\r\n\r\n    const token = await response.data.key\r\n\r\n    if (!token) {\r\n        return {\r\n            redirect: {\r\n                destination: '/',\r\n                permanent: false,\r\n            },\r\n        }\r\n    }\r\n    \r\n    return token;\r\n}\r\nexport default APVForm;"]},"metadata":{},"sourceType":"module"}