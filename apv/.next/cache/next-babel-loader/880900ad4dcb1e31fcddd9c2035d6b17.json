{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport { nombreValidador, correoValidador, celularValidador, sueldoValidador, sueldoFormateador, eliminarValoresNoEnteros } from \"./validations\";\nimport { rutValidador } from \"./validationRut\";\n\nconst useForm = (callback, validate) => {\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    nombre: \"\",\n    rut: \"\",\n    correo: \"\",\n    celular: \"\",\n    sueldo: \"\",\n    afp: \"\",\n    terminosycondiciones: false,\n    esDisabled: true\n  });\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: isSubmitting,\n    1: setIsSubmitting\n  } = useState(false);\n  const oacento = \"\\u00f3\";\n  const aacento = \"\\u00e1\";\n\n  const handleChange = e => {\n    e.preventDefault();\n    let {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    let mensaje = \"\";\n\n    switch (name) {\n      case \"nombre\":\n        {\n          mensaje = nombreValidador(value);\n          break;\n        }\n\n      case \"rut\":\n        {\n          //value = formatearRut(value);\n          let isValid = rutValidador(value);\n\n          if (!isValid) {\n            mensaje = `Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`;\n          }\n\n          break;\n        }\n\n      case \"correo\":\n        {\n          mensaje = correoValidador(value);\n          break;\n        }\n\n      case \"celular\":\n        {\n          mensaje = celularValidador(value);\n          break;\n        }\n\n      case \"sueldo\":\n        {\n          value = eliminarValoresNoEnteros(value);\n\n          if (isNaN(value)) {\n            value = 0;\n          }\n\n          value = sueldoFormateador(value);\n          mensaje = sueldoValidador(value);\n          break;\n        }\n\n      case \"afp\":\n        {\n          break;\n        }\n\n      case \"terminosycondiciones\":\n        {\n          //console.log(mensaje);\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n      [name]: mensaje\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(form));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    console.log(errors);\n\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    form,\n    handleChange,\n    handleSubmit,\n    errors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/juanc/source/repos/Front-APV/apv/utils/useForm.js"],"names":["useState","useEffect","nombreValidador","correoValidador","celularValidador","sueldoValidador","sueldoFormateador","eliminarValoresNoEnteros","rutValidador","useForm","callback","validate","form","setForm","nombre","rut","correo","celular","sueldo","afp","terminosycondiciones","esDisabled","errors","setErrors","isSubmitting","setIsSubmitting","oacento","aacento","handleChange","e","preventDefault","name","value","type","checked","target","mensaje","isValid","isNaN","handleSubmit","console","log","Object","keys","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n    nombreValidador,\r\n    correoValidador,\r\n    celularValidador,\r\n    sueldoValidador,\r\n    sueldoFormateador,\r\n    eliminarValoresNoEnteros\r\n} from \"./validations\";\r\n\r\nimport { rutValidador } from \"./validationRut\";\r\n\r\nconst useForm = (callback, validate) => {\r\n    const [form, setForm] = useState({\r\n        nombre: \"\",\r\n        rut: \"\",\r\n        correo: \"\",\r\n        celular: \"\",\r\n        sueldo: \"\",\r\n        afp: \"\",\r\n        terminosycondiciones: false,\r\n        esDisabled: true,\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const oacento = \"\\u00f3\";\r\n    const aacento = \"\\u00e1\";\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        let { name, value, type, checked } = e.target;\r\n        let mensaje = \"\";\r\n\r\n        switch (name) {\r\n            case \"nombre\": {\r\n                mensaje = nombreValidador(value);\r\n                break;\r\n            }\r\n            case \"rut\": {\r\n                //value = formatearRut(value);\r\n                let isValid = rutValidador(value);\r\n\r\n                if (!isValid) {\r\n                    mensaje = `Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`;\r\n                }\r\n                break;\r\n            }\r\n            case \"correo\": {\r\n                mensaje = correoValidador(value);\r\n                break;\r\n            }\r\n            case \"celular\": {\r\n                mensaje = celularValidador(value);\r\n                break;\r\n            }\r\n            case \"sueldo\": {\r\n                value = eliminarValoresNoEnteros(value);\r\n\r\n                if (isNaN(value)) {\r\n                    value = 0;\r\n                }\r\n\r\n                value = sueldoFormateador(value);\r\n                mensaje = sueldoValidador(value);\r\n                break;\r\n            }\r\n            case \"afp\": {\r\n                break;\r\n            }\r\n            case \"terminosycondiciones\": {\r\n\r\n                //console.log(mensaje);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: type === 'checkbox' ? checked : value\r\n        });\r\n\r\n\r\n        setErrors({\r\n            ...errors,\r\n            [name]: mensaje\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setErrors(validate(form));\r\n        setIsSubmitting(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(errors);\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback();\r\n        }\r\n    }, [errors]);\r\n\r\n    return { form, handleChange, handleSubmit, errors };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}