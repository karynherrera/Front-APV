{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanc\\\\source\\\\repos\\\\Front-APV\\\\apv\\\\components\\\\ApvForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport TerminosModal from \"./TerminosModal\";\nimport React, { useState } from \"react\";\nimport { Formik, useFormik, Form, Field, ErrorMessage, FormikValues, formikbag, useFormikContext } from \"formik\";\nimport * as Yup from 'yup';\nimport { rutValidador } from \"../utils/validationRut\";\nimport { Wizard, WizardStep, sleep } from \"./WizardComponent\";\n\nconst APVForm = () => {\n  const aacento = \"\\u00e1\";\n  const eacento = \"\\u00e9\";\n  const iacento = \"\\u00ed\";\n  const oacento = \"\\u00f3\";\n  const uacento = \"\\u00fa\";\n  const initialValues = {\n    nombre: '',\n    rut: '',\n    correo: '',\n    celular: '',\n    sueldo: '',\n    ahorro: '',\n    terminosycondiciones: false\n  };\n  const {\n    0: modalShow,\n    1: setModalShow\n  } = useState(false);\n\n  const handleClose = () => setModalShow(false);\n\n  const handleShow = () => setModalShow(true);\n\n  const Step1Schema = Yup.object({\n    sueldo: Yup.string().matches(/^[0-9]{6,8}$/, `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`).test('Sueldo-validacion', `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`, function (value) {\n      return value >= 100000 && value <= 10000000;\n    }).required('Por favor ingrese su sueldo líquido.'),\n    ahorro: Yup.string().matches(/^[0-9]+$/, `Ingrese el monto en pesos que desea ahorrar desde $1.000.`).test('Sueldo-validacion', `Ingrese un monto desde $1.000.`, function (value) {\n      return value >= 1000;\n    }).required('Por favor ingrese el monto que desea ahorrar desde $1.000.')\n  });\n  const Step2Schema = Yup.object({\n    nombre: Yup.string().matches(/^[A-Za-z \\u00F1\\u00D1\\u00E1\\u00E9\\u00ED\\u00F3\\u00FA\\u00FC]{3,60}$/, `Ingresa tu nombre sin n${uacento}meros ni caracteres.`).required('Ingresa al menos un nombre y apellido.'),\n    rut: Yup.string().required(`Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`).test('Rut-validacion', `Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`, function (value) {\n      return rutValidador(value);\n    })\n  });\n  const Step3Schema = Yup.object({\n    correo: Yup.string().email(`Tu correo debe incluir un \"@\" y un dominio v${aacento}lido.`).required('Por favor ingrese su correo.'),\n    celular: Yup.string().matches(/^[9]{1}[0-9]{8}$/, `Ingresa un n${uacento}mero de 9 d${iacento}gitos.`).required(`Por favor ingrese su n${uacento}mero de tel${eacento}fono.`),\n    terminosycondiciones: Yup.boolean().oneOf([true], `Debe aceptar las condiciones del servicio y la pol${iacento}tica de privacidad.`)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Formik Multistep Wizard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Wizard, {\n          initialValues: initialValues,\n          onSubmit: async (values) => sleep(300).then(() => console.log('Wizard submit', values)),\n          children: [/*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: () => console.log('Step1 onSubmit'),\n            validationSchema: Step1Schema,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sueldo\",\n                className: \"control-label\",\n                children: \"sueldo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"sueldo\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n                    type: \"text\"\n                  }, field), {}, {\n                    className: `form-control form-control-lg \n                                            ${touched.sueldo ? errors.sueldo ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"sueldo\",\n                    \"aria-describedby\": \"sueldoAyuda\",\n                    placeholder: \"Sueldo L\\xEDquido\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"sueldoAyuda\",\n                    className: `form-text \n                        ${touched.sueldo && errors.sueldo ? \"is-invalid\" : \"\"}`,\n                    children: touched.sueldo && errors.sueldo ? errors.sueldo : \"El sueldo líquido que recibes luego de los descuentos legales.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"ahorro\",\n                className: \"control-label\",\n                children: \"Monto Ahorro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"ahorro\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"text\",\n                    className: `form-control form-control-lg ${touched.ahorro ? errors.ahorro ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"ahorro\",\n                    \"aria-describedby\": \"ahorroAyuda\",\n                    placeholder: \"Ahorro Mensual\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"ahorroAyuda\",\n                    className: `form-text ${touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"}`,\n                    children: touched.ahorro && errors.ahorro ? errors.ahorro : \"El monto en pesos que invertirías en tu APV.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: () => console.log('Step2 onSubmit'),\n            validationSchema: Step2Schema,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"nombre\",\n                className: \"control-label\",\n                children: \"Nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"nombre\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"text\",\n                    className: `form-control form-control-lg ${touched.nombre ? errors.nombre ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"nombre\",\n                    \"aria-describedby\": \"nombreAyuda\",\n                    placeholder: \"Nombre\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"nombreAyuda\",\n                    className: `form-text ${touched.nombre && errors.nombre ? \"is-invalid\" : \"\"}`,\n                    children: touched.nombre && errors.nombre ? errors.nombre : \"Indicanos tu nombre y apellido.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"rut\",\n                className: \"control-label\",\n                children: \"RUT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"rut\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"text\",\n                    className: `form-control form-control-lg ${touched.rut ? errors.rut ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"rut\",\n                    \"aria-describedby\": \"rutAyuda\",\n                    placeholder: \"RUT\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"rutAyuda\",\n                    className: `form-text ${touched.rut && errors.rut ? \"is-invalid\" : \"\"}`,\n                    children: touched.rut && errors.rut ? errors.rut : \"Ej. 12345678-9.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(WizardStep, {\n            onSubmit: () => console.log('Step3 onSubmit'),\n            validationSchema: Step3Schema,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"correo\",\n                className: \"control-label\",\n                children: \"Correo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"correo\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"email\",\n                    className: `form-control form-control-lg ${touched.correo ? errors.correo ? 'is-invalid' : 'is-valid' : ''}`,\n                    id: \"correo\",\n                    \"aria-describedby\": \"correoAyuda\",\n                    placeholder: \"Correo\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"correoAyuda\",\n                    className: `form-text ${touched.correo && errors.correo ? \"is-invalid\" : \"\"}`,\n                    children: touched.correo && errors.correo ? errors.correo : \"Ej. aumentatusueldo@afpmodelo.cl\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"celular\",\n                className: \"control-label\",\n                children: \"Celular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"celular\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"text\",\n                    className: `form-control form-control-lg ${touched.celular ? errors.celular ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                    id: \"celular\",\n                    \"aria-describedby\": \"celularAyuda\",\n                    placeholder: \"Celular\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"celularAyuda\",\n                    className: `form-text ${touched.celular && errors.celular ? \"is-invalid\" : \"\"}`,\n                    children: touched.celular && errors.celular ? errors.celular : \"Ej. 9111223XX\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                name: \"terminosycondiciones\",\n                children: ({\n                  field,\n                  form: {\n                    touched,\n                    errors\n                  }\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label mt-auto\",\n                    htmlFor: \"terminosycondiciones\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                      type: \"checkbox\",\n                      className: \"form-check-input\"\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"terminosycondiciones\",\n                      children: [\"Acepto las\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                        onClick: handleShow,\n                        children: [\"condiciones del servicio y la pol\", iacento, \"tica de privacidad.\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"terminosAyuda\",\n                    className: `form-text \n                            ${touched.terminosycondiciones && errors.terminosycondiciones ? 'is-invalid' : ''}`,\n                    children: touched.terminosycondiciones && errors.terminosycondiciones ? errors.terminosycondiciones : \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TerminosModal, {\n                    show: modalShow,\n                    onHide: handleClose\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\nexport default APVForm;","map":{"version":3,"sources":["C:/Users/juanc/source/repos/Front-APV/apv/components/ApvForm.js"],"names":["TerminosModal","React","useState","Formik","useFormik","Form","Field","ErrorMessage","FormikValues","formikbag","useFormikContext","Yup","rutValidador","Wizard","WizardStep","sleep","APVForm","aacento","eacento","iacento","oacento","uacento","initialValues","nombre","rut","correo","celular","sueldo","ahorro","terminosycondiciones","modalShow","setModalShow","handleClose","handleShow","Step1Schema","object","string","matches","test","value","required","Step2Schema","Step3Schema","email","boolean","oneOf","values","then","console","log","field","form","touched","errors"],"mappings":"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","sourcesContent":["import TerminosModal from \"./TerminosModal\";\r\nimport React, {useState} from \"react\";\r\nimport {Formik, useFormik, Form, Field, ErrorMessage, FormikValues, formikbag, useFormikContext} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport {rutValidador} from \"../utils/validationRut\";\r\nimport {Wizard, WizardStep, sleep} from \"./WizardComponent\"\r\n\r\nconst APVForm = () => {\r\n\r\n    const aacento = \"\\u00e1\";\r\n    const eacento = \"\\u00e9\";\r\n    const iacento = \"\\u00ed\";\r\n    const oacento = \"\\u00f3\";\r\n    const uacento = \"\\u00fa\";\r\n\r\n\r\n    const initialValues = {\r\n        nombre: '',\r\n        rut: '',\r\n        correo: '',\r\n        celular: '',\r\n        sueldo: '',\r\n        ahorro: '',\r\n        terminosycondiciones: false\r\n    };\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n\r\n    const Step1Schema = Yup.object({\r\n        sueldo: Yup\r\n            .string()\r\n            .matches(/^[0-9]{6,8}$/, `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`)\r\n            .test('Sueldo-validacion', `Ingrese un sueldo l${iacento}quido entre $100.000 y $10.000.000.`, function (value) {\r\n                return (value>= 100000 && value <= 10000000)\r\n            })\r\n            .required('Por favor ingrese su sueldo líquido.'),\r\n        ahorro: Yup\r\n            .string()\r\n            .matches(/^[0-9]+$/, `Ingrese el monto en pesos que desea ahorrar desde $1.000.`)\r\n            .test('Sueldo-validacion', `Ingrese un monto desde $1.000.`, function (value) {\r\n                return (value >= 1000 )\r\n            })\r\n            .required('Por favor ingrese el monto que desea ahorrar desde $1.000.'),\r\n    });\r\n\r\n    const Step2Schema = Yup.object({\r\n        nombre: Yup\r\n            .string()\r\n            .matches(\r\n                /^[A-Za-z \\u00F1\\u00D1\\u00E1\\u00E9\\u00ED\\u00F3\\u00FA\\u00FC]{3,60}$/,\r\n                `Ingresa tu nombre sin n${uacento}meros ni caracteres.`)\r\n            .required('Ingresa al menos un nombre y apellido.'),\r\n        rut: Yup\r\n            .string()\r\n            .required(`Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`)\r\n            .test('Rut-validacion',\r\n                `Por favor ingrese un RUT v${aacento}lido sin puntos y con gui${oacento}n.`,\r\n                function (value) {\r\n                    return rutValidador(value);\r\n                }),\r\n    });\r\n\r\n    const Step3Schema = Yup.object({\r\n        correo: Yup\r\n            .string()\r\n            .email(`Tu correo debe incluir un \"@\" y un dominio v${aacento}lido.`)\r\n            .required('Por favor ingrese su correo.'),\r\n        celular: Yup\r\n            .string()\r\n            .matches(/^[9]{1}[0-9]{8}$/, `Ingresa un n${uacento}mero de 9 d${iacento}gitos.`)\r\n            .required(`Por favor ingrese su n${uacento}mero de tel${eacento}fono.`),\r\n        terminosycondiciones: Yup\r\n            .boolean()\r\n            .oneOf([true], `Debe aceptar las condiciones del servicio y la pol${iacento}tica de privacidad.`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <div>\r\n                    <h1>Formik Multistep Wizard</h1>\r\n                    <Wizard\r\n                        initialValues={initialValues}\r\n                        onSubmit={async values =>\r\n                            sleep(300).then(() => console.log('Wizard submit', values))\r\n                        }\r\n                    >\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step1 onSubmit')}\r\n                            validationSchema={Step1Schema}\r\n                        >\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"sueldo\"\r\n                                    className={\"control-label\"}>sueldo</label>\r\n                                <Field name=\"sueldo\"\r\n                                >\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                          }) => (\r\n                                              <>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            {...field}\r\n                                            className={\r\n                                                `form-control form-control-lg \r\n                                            ${touched.sueldo ? (errors.sueldo ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                            id=\"sueldo\"\r\n                                            aria-describedby=\"sueldoAyuda\"\r\n                                            placeholder=\"Sueldo Líquido\"\r\n                                        />\r\n                                                  <small\r\n                                                      id=\"sueldoAyuda\"\r\n                                                      className={`form-text \r\n                        ${touched.sueldo && errors.sueldo ? \"is-invalid\" : \"\" }`}\r\n                                                  >\r\n                                                      {touched.sueldo && errors.sueldo\r\n                                                          ? errors.sueldo\r\n                                                          : \"El sueldo líquido que recibes luego de los descuentos legales.\"}\r\n                                                  </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"ahorro\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Monto Ahorro\r\n                                </label>\r\n                                <Field name=\"ahorro\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"text\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.ahorro ? (errors.ahorro ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                                id=\"ahorro\"\r\n                                                aria-describedby=\"ahorroAyuda\"\r\n                                                placeholder=\"Ahorro Mensual\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"ahorroAyuda\"\r\n                                                className={`form-text ${\r\n                                                    touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"}`}\r\n                                            >\r\n                                                {touched.ahorro && errors.ahorro\r\n                                                    ? errors.ahorro\r\n                                                    : \"El monto en pesos que invertirías en tu APV.\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </WizardStep>\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step2 onSubmit')}\r\n                            validationSchema={Step2Schema}\r\n                        >\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"nombre\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Nombre\r\n                                </label>\r\n                                <Field name=\"nombre\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"text\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.nombre ? (errors.nombre ? \"is-invalid\" : \"is-valid\" ) : \"\"}`}\r\n                                                id=\"nombre\"\r\n                                                aria-describedby=\"nombreAyuda\"\r\n                                                placeholder=\"Nombre\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"nombreAyuda\"\r\n                                                className={`form-text ${\r\n                                                    touched.nombre && errors.nombre ? \"is-invalid\" : \"\"\r\n                                                }`}\r\n                                            >\r\n                                                {touched.nombre && errors.nombre\r\n                                                    ? errors.nombre\r\n                                                    : \"Indicanos tu nombre y apellido.\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"rut\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    RUT\r\n                                </label>\r\n                                <Field name=\"rut\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"text\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.rut ? (errors.rut ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                                id=\"rut\"\r\n                                                aria-describedby=\"rutAyuda\"\r\n                                                placeholder=\"RUT\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"rutAyuda\"\r\n                                                className={`form-text ${\r\n                                                    touched.rut && errors.rut ? \"is-invalid\" : \"\"}`}\r\n                                            >\r\n                                                {touched.rut && errors.rut\r\n                                                    ? errors.rut\r\n                                                    : \"Ej. 12345678-9.\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </WizardStep>\r\n                        <WizardStep\r\n                            onSubmit={() => console.log('Step3 onSubmit')}\r\n                            validationSchema={Step3Schema}\r\n                        >\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"correo\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Correo\r\n                                </label>\r\n                                <Field name=\"correo\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"email\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.correo ? (errors.correo ? 'is-invalid' : 'is-valid') : ''\r\n                                                }`}\r\n                                                id=\"correo\"\r\n                                                aria-describedby=\"correoAyuda\"\r\n                                                placeholder=\"Correo\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"correoAyuda\"\r\n                                                className={`form-text ${touched.correo && errors.correo ? \"is-invalid\" : \"\"}`}\r\n                                            >\r\n                                                {touched.correo && errors.correo\r\n                                                    ? errors.correo\r\n                                                    : \"Ej. aumentatusueldo@afpmodelo.cl\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"celular\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Celular\r\n                                </label>\r\n                                <Field name=\"celular\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"text\"\r\n                                                className={`form-control form-control-lg ${\r\n                                                    touched.celular ? (errors.celular ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                                id=\"celular\"\r\n                                                aria-describedby=\"celularAyuda\"\r\n                                                placeholder=\"Celular\"\r\n                                            />\r\n                                            <small\r\n                                                id=\"celularAyuda\"\r\n                                                className={`form-text ${\r\n                                                    touched.celular && errors.celular ? \"is-invalid\" : \"\"}`}\r\n                                            >\r\n                                                {touched.celular && errors.celular ? errors.celular : \"Ej. 9111223XX\"}\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n\r\n                                <Field name=\"terminosycondiciones\">\r\n                                    {({\r\n                                          field,\r\n                                          form: { touched, errors },\r\n                                      }) => (\r\n                                        <>\r\n                                            <label\r\n                                                className=\"form-check-label mt-auto\"\r\n                                                htmlFor=\"terminosycondiciones\"\r\n                                            >\r\n                                                <input\r\n                                                    {...field}\r\n                                                    type=\"checkbox\"\r\n                                                    className=\"form-check-input\"\r\n                                                />\r\n                                                <small className=\"terminosycondiciones\">\r\n                                                    Acepto las{\" \"}\r\n                                                    <a\r\n                                                        onClick={handleShow}\r\n                                                    >\r\n                                                        condiciones del servicio y la pol{iacento}\r\n                                                        tica de privacidad.\r\n                                                    </a>\r\n                                                </small>\r\n                                            </label>\r\n                                            <small\r\n                                                id=\"terminosAyuda\"\r\n                                                className={\r\n                                                    `form-text \r\n                            ${ touched.terminosycondiciones && errors.terminosycondiciones\r\n                                                        ? 'is-invalid': ''}`}\r\n                                            >\r\n                                                {touched.terminosycondiciones && errors.terminosycondiciones\r\n                                                    ? errors.terminosycondiciones\r\n                                                    : \"\"}\r\n                                            </small>\r\n                                            <TerminosModal\r\n                                                show={modalShow}\r\n                                                onHide={handleClose}\r\n                                            />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </WizardStep>\r\n                    </Wizard>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport default APVForm;"]},"metadata":{},"sourceType":"module"}